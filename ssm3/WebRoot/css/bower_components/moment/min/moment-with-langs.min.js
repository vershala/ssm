//! moment.js
//! version : 2.7.0
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
(function (a) {
	function b(a, b, c) {
		switch (arguments.length) {
		case 2:
			return null != a ? a : b;
		case 3:
			return null != a ? a : null != b ? b : c;
		default:
			throw new Error("Implement me")
		}
	}
	function c() {
		return {
			empty : !1,
			unusedTokens : [],
			unusedInput : [],
			overflow : -2,
			charsLeftOver : 0,
			nullInput : !1,
			invalidMonth : null,
			invalidFormat : !1,
			userInvalidated : !1,
			iso : !1
		}
	}
	function d(a, b) {
		function c() {
			mb.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + a)
		}
		var d = !0;
		return j(function () {
			return d && (c(), d = !1),
			b.apply(this, arguments)
		}, b)
	}
	function e(a, b) {
		return function (c) {
			return m(a.call(this, c), b)
		}
	}
	function f(a, b) {
		return function (c) {
			return this.lang().ordinal(a.call(this, c), b)
		}
	}
	function g() {}

	function h(a) {
		z(a),
		j(this, a)
	}
	function i(a) {
		var b = s(a),
		c = b.year || 0,
		d = b.quarter || 0,
		e = b.month || 0,
		f = b.week || 0,
		g = b.day || 0,
		h = b.hour || 0,
		i = b.minute || 0,
		j = b.second || 0,
		k = b.millisecond || 0;
		this._milliseconds = +k + 1e3 * j + 6e4 * i + 36e5 * h,
		this._days = +g + 7 * f,
		this._months = +e + 3 * d + 12 * c,
		this._data = {},
		this._bubble()
	}
	function j(a, b) {
		for (var c in b)
			b.hasOwnProperty(c) && (a[c] = b[c]);
		return b.hasOwnProperty("toString") && (a.toString = b.toString),
		b.hasOwnProperty("valueOf") && (a.valueOf = b.valueOf),
		a
	}
	function k(a) {
		var b,
		c = {};
		for (b in a)
			a.hasOwnProperty(b) && Ab.hasOwnProperty(b) && (c[b] = a[b]);
		return c
	}
	function l(a) {
		return 0 > a ? Math.ceil(a) : Math.floor(a)
	}
	function m(a, b, c) {
		for (var d = "" + Math.abs(a), e = a >= 0; d.length < b; )
			d = "0" + d;
		return (e ? c ? "+" : "" : "-") + d
	}
	function n(a, b, c, d) {
		var e = b._milliseconds,
		f = b._days,
		g = b._months;
		d = null == d ? !0 : d,
		e && a._d.setTime(+a._d + e * c),
		f && hb(a, "Date", gb(a, "Date") + f * c),
		g && fb(a, gb(a, "Month") + g * c),
		d && mb.updateOffset(a, f || g)
	}
	function o(a) {
		return "[object Array]" === Object.prototype.toString.call(a)
	}
	function p(a) {
		return "[object Date]" === Object.prototype.toString.call(a) || a instanceof Date
	}
	function q(a, b, c) {
		var d,
		e = Math.min(a.length, b.length),
		f = Math.abs(a.length - b.length),
		g = 0;
		for (d = 0; e > d; d++)
			(c && a[d] !== b[d] || !c && u(a[d]) !== u(b[d])) && g++;
		return g + f
	}
	function r(a) {
		if (a) {
			var b = a.toLowerCase().replace(/(.)s$/, "$1");
			a = bc[a] || cc[b] || b
		}
		return a
	}
	function s(a) {
		var b,
		c,
		d = {};
		for (c in a)
			a.hasOwnProperty(c) && (b = r(c), b && (d[b] = a[c]));
		return d
	}
	function t(b) {
		var c,
		d;
		if (0 === b.indexOf("week"))
			c = 7, d = "day";
		else {
			if (0 !== b.indexOf("month"))
				return;
			c = 12,
			d = "month"
		}
		mb[b] = function (e, f) {
			var g,
			h,
			i = mb.fn._lang[b],
			j = [];
			if ("number" == typeof e && (f = e, e = a), h = function (a) {
				var b = mb().utc().set(d, a);
				return i.call(mb.fn._lang, b, e || "")
			}, null != f)
				return h(f);
			for (g = 0; c > g; g++)
				j.push(h(g));
			return j
		}
	}
	function u(a) {
		var b = +a,
		c = 0;
		return 0 !== b && isFinite(b) && (c = b >= 0 ? Math.floor(b) : Math.ceil(b)),
		c
	}
	function v(a, b) {
		return new Date(Date.UTC(a, b + 1, 0)).getUTCDate()
	}
	function w(a, b, c) {
		return bb(mb([a, 11, 31 + b - c]), b, c).week
	}
	function x(a) {
		return y(a) ? 366 : 365
	}
	function y(a) {
		return a % 4 === 0 && a % 100 !== 0 || a % 400 === 0
	}
	function z(a) {
		var b;
		a._a && -2 === a._pf.overflow && (b = a._a[tb] < 0 || a._a[tb] > 11 ? tb : a._a[ub] < 1 || a._a[ub] > v(a._a[sb], a._a[tb]) ? ub : a._a[vb] < 0 || a._a[vb] > 23 ? vb : a._a[wb] < 0 || a._a[wb] > 59 ? wb : a._a[xb] < 0 || a._a[xb] > 59 ? xb : a._a[yb] < 0 || a._a[yb] > 999 ? yb : -1, a._pf._overflowDayOfYear && (sb > b || b > ub) && (b = ub), a._pf.overflow = b)
	}
	function A(a) {
		return null == a._isValid && (a._isValid = !isNaN(a._d.getTime()) && a._pf.overflow < 0 && !a._pf.empty && !a._pf.invalidMonth && !a._pf.nullInput && !a._pf.invalidFormat && !a._pf.userInvalidated, a._strict && (a._isValid = a._isValid && 0 === a._pf.charsLeftOver && 0 === a._pf.unusedTokens.length)),
		a._isValid
	}
	function B(a) {
		return a ? a.toLowerCase().replace("_", "-") : a
	}
	function C(a, b) {
		return b._isUTC ? mb(a).zone(b._offset || 0) : mb(a).local()
	}
	function D(a, b) {
		return b.abbr = a,
		zb[a] || (zb[a] = new g),
		zb[a].set(b),
		zb[a]
	}
	function E(a) {
		delete zb[a]
	}
	function F(a) {
		var b,
		c,
		d,
		e,
		f = 0,
		g = function (a) {
			if (!zb[a] && Bb)
				try {
					require("./lang/" + a)
				} catch (b) {}

			return zb[a]
		};
		if (!a)
			return mb.fn._lang;
		if (!o(a)) {
			if (c = g(a))
				return c;
			a = [a]
		}
		for (; f < a.length; ) {
			for (e = B(a[f]).split("-"), b = e.length, d = B(a[f + 1]), d = d ? d.split("-") : null; b > 0; ) {
				if (c = g(e.slice(0, b).join("-")))
					return c;
				if (d && d.length >= b && q(e, d, !0) >= b - 1)
					break;
				b--
			}
			f++
		}
		return mb.fn._lang
	}
	function G(a) {
		return a.match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "")
	}
	function H(a) {
		var b,
		c,
		d = a.match(Fb);
		for (b = 0, c = d.length; c > b; b++)
			d[b] = hc[d[b]] ? hc[d[b]] : G(d[b]);
		return function (e) {
			var f = "";
			for (b = 0; c > b; b++)
				f += d[b]instanceof Function ? d[b].call(e, a) : d[b];
			return f
		}
	}
	function I(a, b) {
		return a.isValid() ? (b = J(b, a.lang()), dc[b] || (dc[b] = H(b)), dc[b](a)) : a.lang().invalidDate()
	}
	function J(a, b) {
		function c(a) {
			return b.longDateFormat(a) || a
		}
		var d = 5;
		for (Gb.lastIndex = 0; d >= 0 && Gb.test(a); )
			a = a.replace(Gb, c), Gb.lastIndex = 0, d -= 1;
		return a
	}
	function K(a, b) {
		var c,
		d = b._strict;
		switch (a) {
		case "Q":
			return Rb;
		case "DDDD":
			return Tb;
		case "YYYY":
		case "GGGG":
		case "gggg":
			return d ? Ub : Jb;
		case "Y":
		case "G":
		case "g":
			return Wb;
		case "YYYYYY":
		case "YYYYY":
		case "GGGGG":
		case "ggggg":
			return d ? Vb : Kb;
		case "S":
			if (d)
				return Rb;
		case "SS":
			if (d)
				return Sb;
		case "SSS":
			if (d)
				return Tb;
		case "DDD":
			return Ib;
		case "MMM":
		case "MMMM":
		case "dd":
		case "ddd":
		case "dddd":
			return Mb;
		case "a":
		case "A":
			return F(b._l)._meridiemParse;
		case "X":
			return Pb;
		case "Z":
		case "ZZ":
			return Nb;
		case "T":
			return Ob;
		case "SSSS":
			return Lb;
		case "MM":
		case "DD":
		case "YY":
		case "GG":
		case "gg":
		case "HH":
		case "hh":
		case "mm":
		case "ss":
		case "ww":
		case "WW":
			return d ? Sb : Hb;
		case "M":
		case "D":
		case "d":
		case "H":
		case "h":
		case "m":
		case "s":
		case "w":
		case "W":
		case "e":
		case "E":
			return Hb;
		case "Do":
			return Qb;
		default:
			return c = new RegExp(T(S(a.replace("\\", "")), "i"))
		}
	}
	function L(a) {
		a = a || "";
		var b = a.match(Nb) || [],
		c = b[b.length - 1] || [],
		d = (c + "").match(_b) || ["-", 0, 0],
		e =  + (60 * d[1]) + u(d[2]);
		return "+" === d[0] ? -e : e
	}
	function M(a, b, c) {
		var d,
		e = c._a;
		switch (a) {
		case "Q":
			null != b && (e[tb] = 3 * (u(b) - 1));
			break;
		case "M":
		case "MM":
			null != b && (e[tb] = u(b) - 1);
			break;
		case "MMM":
		case "MMMM":
			d = F(c._l).monthsParse(b),
			null != d ? e[tb] = d : c._pf.invalidMonth = b;
			break;
		case "D":
		case "DD":
			null != b && (e[ub] = u(b));
			break;
		case "Do":
			null != b && (e[ub] = u(parseInt(b, 10)));
			break;
		case "DDD":
		case "DDDD":
			null != b && (c._dayOfYear = u(b));
			break;
		case "YY":
			e[sb] = mb.parseTwoDigitYear(b);
			break;
		case "YYYY":
		case "YYYYY":
		case "YYYYYY":
			e[sb] = u(b);
			break;
		case "a":
		case "A":
			c._isPm = F(c._l).isPM(b);
			break;
		case "H":
		case "HH":
		case "h":
		case "hh":
			e[vb] = u(b);
			break;
		case "m":
		case "mm":
			e[wb] = u(b);
			break;
		case "s":
		case "ss":
			e[xb] = u(b);
			break;
		case "S":
		case "SS":
		case "SSS":
		case "SSSS":
			e[yb] = u(1e3 * ("0." + b));
			break;
		case "X":
			c._d = new Date(1e3 * parseFloat(b));
			break;
		case "Z":
		case "ZZ":
			c._useUTC = !0,
			c._tzm = L(b);
			break;
		case "dd":
		case "ddd":
		case "dddd":
			d = F(c._l).weekdaysParse(b),
			null != d ? (c._w = c._w || {}, c._w.d = d) : c._pf.invalidWeekday = b;
			break;
		case "w":
		case "ww":
		case "W":
		case "WW":
		case "d":
		case "e":
		case "E":
			a = a.substr(0, 1);
		case "gggg":
		case "GGGG":
		case "GGGGG":
			a = a.substr(0, 2),
			b && (c._w = c._w || {}, c._w[a] = u(b));
			break;
		case "gg":
		case "GG":
			c._w = c._w || {},
			c._w[a] = mb.parseTwoDigitYear(b)
		}
	}
	function N(a) {
		var c,
		d,
		e,
		f,
		g,
		h,
		i,
		j;
		c = a._w,
		null != c.GG || null != c.W || null != c.E ? (g = 1, h = 4, d = b(c.GG, a._a[sb], bb(mb(), 1, 4).year), e = b(c.W, 1), f = b(c.E, 1)) : (j = F(a._l), g = j._week.dow, h = j._week.doy, d = b(c.gg, a._a[sb], bb(mb(), g, h).year), e = b(c.w, 1), null != c.d ? (f = c.d, g > f && ++e) : f = null != c.e ? c.e + g : g),
		i = cb(d, e, f, h, g),
		a._a[sb] = i.year,
		a._dayOfYear = i.dayOfYear
	}
	function O(a) {
		var c,
		d,
		e,
		f,
		g = [];
		if (!a._d) {
			for (e = Q(a), a._w && null == a._a[ub] && null == a._a[tb] && N(a), a._dayOfYear && (f = b(a._a[sb], e[sb]), a._dayOfYear > x(f) && (a._pf._overflowDayOfYear = !0), d = Z(f, 0, a._dayOfYear), a._a[tb] = d.getUTCMonth(), a._a[ub] = d.getUTCDate()), c = 0; 3 > c && null == a._a[c]; ++c)
				a._a[c] = g[c] = e[c];
			for (; 7 > c; c++)
				a._a[c] = g[c] = null == a._a[c] ? 2 === c ? 1 : 0 : a._a[c];
			a._d = (a._useUTC ? Z : Y).apply(null, g),
			null != a._tzm && a._d.setUTCMinutes(a._d.getUTCMinutes() + a._tzm)
		}
	}
	function P(a) {
		var b;
		a._d || (b = s(a._i), a._a = [b.year, b.month, b.day, b.hour, b.minute, b.second, b.millisecond], O(a))
	}
	function Q(a) {
		var b = new Date;
		return a._useUTC ? [b.getUTCFullYear(), b.getUTCMonth(), b.getUTCDate()] : [b.getFullYear(), b.getMonth(), b.getDate()]
	}
	function R(a) {
		if (a._f === mb.ISO_8601)
			return void V(a);
		a._a = [],
		a._pf.empty = !0;
		var b,
		c,
		d,
		e,
		f,
		g = F(a._l),
		h = "" + a._i,
		i = h.length,
		j = 0;
		for (d = J(a._f, g).match(Fb) || [], b = 0; b < d.length; b++)
			e = d[b], c = (h.match(K(e, a)) || [])[0], c && (f = h.substr(0, h.indexOf(c)), f.length > 0 && a._pf.unusedInput.push(f), h = h.slice(h.indexOf(c) + c.length), j += c.length), hc[e] ? (c ? a._pf.empty = !1 : a._pf.unusedTokens.push(e), M(e, c, a)) : a._strict && !c && a._pf.unusedTokens.push(e);
		a._pf.charsLeftOver = i - j,
		h.length > 0 && a._pf.unusedInput.push(h),
		a._isPm && a._a[vb] < 12 && (a._a[vb] += 12),
		a._isPm === !1 && 12 === a._a[vb] && (a._a[vb] = 0),
		O(a),
		z(a)
	}
	function S(a) {
		return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (a, b, c, d, e) {
			return b || c || d || e
		})
	}
	function T(a) {
		return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
	}
	function U(a) {
		var b,
		d,
		e,
		f,
		g;
		if (0 === a._f.length)
			return a._pf.invalidFormat = !0, void(a._d = new Date(0 / 0));
		for (f = 0; f < a._f.length; f++)
			g = 0, b = j({}, a), b._pf = c(), b._f = a._f[f], R(b), A(b) && (g += b._pf.charsLeftOver, g += 10 * b._pf.unusedTokens.length, b._pf.score = g, (null == e || e > g) && (e = g, d = b));
		j(a, d || b)
	}
	function V(a) {
		var b,
		c,
		d = a._i,
		e = Xb.exec(d);
		if (e) {
			for (a._pf.iso = !0, b = 0, c = Zb.length; c > b; b++)
				if (Zb[b][1].exec(d)) {
					a._f = Zb[b][0] + (e[6] || " ");
					break
				}
			for (b = 0, c = $b.length; c > b; b++)
				if ($b[b][1].exec(d)) {
					a._f += $b[b][0];
					break
				}
			d.match(Nb) && (a._f += "Z"),
			R(a)
		} else
			a._isValid = !1
	}
	function W(a) {
		V(a),
		a._isValid === !1 && (delete a._isValid, mb.createFromInputFallback(a))
	}
	function X(b) {
		var c = b._i,
		d = Cb.exec(c);
		c === a ? b._d = new Date : d ? b._d = new Date(+d[1]) : "string" == typeof c ? W(b) : o(c) ? (b._a = c.slice(0), O(b)) : p(c) ? b._d = new Date(+c) : "object" == typeof c ? P(b) : "number" == typeof c ? b._d = new Date(c) : mb.createFromInputFallback(b)
	}
	function Y(a, b, c, d, e, f, g) {
		var h = new Date(a, b, c, d, e, f, g);
		return 1970 > a && h.setFullYear(a),
		h
	}
	function Z(a) {
		var b = new Date(Date.UTC.apply(null, arguments));
		return 1970 > a && b.setUTCFullYear(a),
		b
	}
	function $(a, b) {
		if ("string" == typeof a)
			if (isNaN(a)) {
				if (a = b.weekdaysParse(a), "number" != typeof a)
					return null
			} else
				a = parseInt(a, 10);
		return a
	}
	function _(a, b, c, d, e) {
		return e.relativeTime(b || 1, !!c, a, d)
	}
	function ab(a, b, c) {
		var d = rb(Math.abs(a) / 1e3),
		e = rb(d / 60),
		f = rb(e / 60),
		g = rb(f / 24),
		h = rb(g / 365),
		i = d < ec.s && ["s", d] || 1 === e && ["m"] || e < ec.m && ["mm", e] || 1 === f && ["h"] || f < ec.h && ["hh", f] || 1 === g && ["d"] || g <= ec.dd && ["dd", g] || g <= ec.dm && ["M"] || g < ec.dy && ["MM", rb(g / 30)] || 1 === h && ["y"] || ["yy", h];
		return i[2] = b,
		i[3] = a > 0,
		i[4] = c,
		_.apply({}, i)
	}
	function bb(a, b, c) {
		var d,
		e = c - b,
		f = c - a.day();
		return f > e && (f -= 7),
		e - 7 > f && (f += 7),
		d = mb(a).add("d", f), {
			week : Math.ceil(d.dayOfYear() / 7),
			year : d.year()
		}
	}
	function cb(a, b, c, d, e) {
		var f,
		g,
		h = Z(a, 0, 1).getUTCDay();
		return h = 0 === h ? 7 : h,
		c = null != c ? c : e,
		f = e - h + (h > d ? 7 : 0) - (e > h ? 7 : 0),
		g = 7 * (b - 1) + (c - e) + f + 1, {
			year : g > 0 ? a : a - 1,
			dayOfYear : g > 0 ? g : x(a - 1) + g
		}
	}
	function db(b) {
		var c = b._i,
		d = b._f;
		return null === c || d === a && "" === c ? mb.invalid({
			nullInput : !0
		}) : ("string" == typeof c && (b._i = c = F().preparse(c)), mb.isMoment(c) ? (b = k(c), b._d = new Date(+c._d)) : d ? o(d) ? U(b) : R(b) : X(b), new h(b))
	}
	function eb(a, b) {
		var c,
		d;
		if (1 === b.length && o(b[0]) && (b = b[0]), !b.length)
			return mb();
		for (c = b[0], d = 1; d < b.length; ++d)
			b[d][a](c) && (c = b[d]);
		return c
	}
	function fb(a, b) {
		var c;
		return "string" == typeof b && (b = a.lang().monthsParse(b), "number" != typeof b) ? a : (c = Math.min(a.date(), v(a.year(), b)), a._d["set" + (a._isUTC ? "UTC" : "") + "Month"](b, c), a)
	}
	function gb(a, b) {
		return a._d["get" + (a._isUTC ? "UTC" : "") + b]()
	}
	function hb(a, b, c) {
		return "Month" === b ? fb(a, c) : a._d["set" + (a._isUTC ? "UTC" : "") + b](c)
	}
	function ib(a, b) {
		return function (c) {
			return null != c ? (hb(this, a, c), mb.updateOffset(this, b), this) : gb(this, a)
		}
	}
	function jb(a) {
		mb.duration.fn[a] = function () {
			return this._data[a]
		}
	}
	function kb(a, b) {
		mb.duration.fn["as" + a] = function () {
			return +this / b
		}
	}
	function lb(a) {
		"undefined" == typeof ender && (nb = qb.moment, qb.moment = a ? d("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.", mb) : mb)
	}
	for (var mb, nb, ob, pb = "2.7.0", qb = "undefined" != typeof global ? global : this, rb = Math.round, sb = 0, tb = 1, ub = 2, vb = 3, wb = 4, xb = 5, yb = 6, zb = {}, Ab = {
			_isAMomentObject : null,
			_i : null,
			_f : null,
			_l : null,
			_strict : null,
			_tzm : null,
			_isUTC : null,
			_offset : null,
			_pf : null,
			_lang : null
		}, Bb = "undefined" != typeof module && module.exports, Cb = /^\/?Date\((\-?\d+)/i, Db = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, Eb = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/, Fb = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g, Gb = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g, Hb = /\d\d?/, Ib = /\d{1,3}/, Jb = /\d{1,4}/, Kb = /[+\-]?\d{1,6}/, Lb = /\d+/, Mb = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, Nb = /Z|[\+\-]\d\d:?\d\d/gi, Ob = /T/i, Pb = /[\+\-]?\d+(\.\d{1,3})?/, Qb = /\d{1,2}/, Rb = /\d/, Sb = /\d\d/, Tb = /\d{3}/, Ub = /\d{4}/, Vb = /[+-]?\d{6}/, Wb = /[+-]?\d+/, Xb = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Yb = "YYYY-MM-DDTHH:mm:ssZ", Zb = [["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/], ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/], ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/], ["GGGG-[W]WW", /\d{4}-W\d{2}/], ["YYYY-DDD", /\d{4}-\d{3}/]], $b = [["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/], ["HH:mm", /(T| )\d\d:\d\d/], ["HH", /(T| )\d\d/]], _b = /([\+\-]|\d\d)/gi, ac = ("Date|Hours|Minutes|Seconds|Milliseconds".split("|"), {
			Milliseconds : 1,
			Seconds : 1e3,
			Minutes : 6e4,
			Hours : 36e5,
			Days : 864e5,
			Months : 2592e6,
			Years : 31536e6
		}), bc = {
			ms : "millisecond",
			s : "second",
			m : "minute",
			h : "hour",
			d : "day",
			D : "date",
			w : "week",
			W : "isoWeek",
			M : "month",
			Q : "quarter",
			y : "year",
			DDD : "dayOfYear",
			e : "weekday",
			E : "isoWeekday",
			gg : "weekYear",
			GG : "isoWeekYear"
		}, cc = {
			dayofyear : "dayOfYear",
			isoweekday : "isoWeekday",
			isoweek : "isoWeek",
			weekyear : "weekYear",
			isoweekyear : "isoWeekYear"
		}, dc = {}, ec = {
			s : 45,
			m : 45,
			h : 22,
			dd : 25,
			dm : 45,
			dy : 345
		}, fc = "DDD w W M D d".split(" "), gc = "M D H h m s w W".split(" "), hc = {
			M : function () {
				return this.month() + 1
			},
			MMM : function (a) {
				return this.lang().monthsShort(this, a)
			},
			MMMM : function (a) {
				return this.lang().months(this, a)
			},
			D : function () {
				return this.date()
			},
			DDD : function () {
				return this.dayOfYear()
			},
			d : function () {
				return this.day()
			},
			dd : function (a) {
				return this.lang().weekdaysMin(this, a)
			},
			ddd : function (a) {
				return this.lang().weekdaysShort(this, a)
			},
			dddd : function (a) {
				return this.lang().weekdays(this, a)
			},
			w : function () {
				return this.week()
			},
			W : function () {
				return this.isoWeek()
			},
			YY : function () {
				return m(this.year() % 100, 2)
			},
			YYYY : function () {
				return m(this.year(), 4)
			},
			YYYYY : function () {
				return m(this.year(), 5)
			},
			YYYYYY : function () {
				var a = this.year(),
				b = a >= 0 ? "+" : "-";
				return b + m(Math.abs(a), 6)
			},
			gg : function () {
				return m(this.weekYear() % 100, 2)
			},
			gggg : function () {
				return m(this.weekYear(), 4)
			},
			ggggg : function () {
				return m(this.weekYear(), 5)
			},
			GG : function () {
				return m(this.isoWeekYear() % 100, 2)
			},
			GGGG : function () {
				return m(this.isoWeekYear(), 4)
			},
			GGGGG : function () {
				return m(this.isoWeekYear(), 5)
			},
			e : function () {
				return this.weekday()
			},
			E : function () {
				return this.isoWeekday()
			},
			a : function () {
				return this.lang().meridiem(this.hours(), this.minutes(), !0)
			},
			A : function () {
				return this.lang().meridiem(this.hours(), this.minutes(), !1)
			},
			H : function () {
				return this.hours()
			},
			h : function () {
				return this.hours() % 12 || 12
			},
			m : function () {
				return this.minutes()
			},
			s : function () {
				return this.seconds()
			},
			S : function () {
				return u(this.milliseconds() / 100)
			},
			SS : function () {
				return m(u(this.milliseconds() / 10), 2)
			},
			SSS : function () {
				return m(this.milliseconds(), 3)
			},
			SSSS : function () {
				return m(this.milliseconds(), 3)
			},
			Z : function () {
				var a = -this.zone(),
				b = "+";
				return 0 > a && (a = -a, b = "-"),
				b + m(u(a / 60), 2) + ":" + m(u(a) % 60, 2)
			},
			ZZ : function () {
				var a = -this.zone(),
				b = "+";
				return 0 > a && (a = -a, b = "-"),
				b + m(u(a / 60), 2) + m(u(a) % 60, 2)
			},
			z : function () {
				return this.zoneAbbr()
			},
			zz : function () {
				return this.zoneName()
			},
			X : function () {
				return this.unix()
			},
			Q : function () {
				return this.quarter()
			}
		}, ic = ["months", "monthsShort", "weekdays", "weekdaysShort", "weekdaysMin"]; fc.length; )
		ob = fc.pop(), hc[ob + "o"] = f(hc[ob], ob);
	for (; gc.length; )
		ob = gc.pop(), hc[ob + ob] = e(hc[ob], 2);
	for (hc.DDDD = e(hc.DDD, 3), j(g.prototype, {
			set : function (a) {
				var b,
				c;
				for (c in a)
					b = a[c], "function" == typeof b ? this[c] = b : this["_" + c] = b
			},
			_months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
			months : function (a) {
				return this._months[a.month()]
			},
			_monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
			monthsShort : function (a) {
				return this._monthsShort[a.month()]
			},
			monthsParse : function (a) {
				var b,
				c,
				d;
				for (this._monthsParse || (this._monthsParse = []), b = 0; 12 > b; b++)
					if (this._monthsParse[b] || (c = mb.utc([2e3, b]), d = "^" + this.months(c, "") + "|^" + this.monthsShort(c, ""), this._monthsParse[b] = new RegExp(d.replace(".", ""), "i")), this._monthsParse[b].test(a))
						return b
			},
			_weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
			weekdays : function (a) {
				return this._weekdays[a.day()]
			},
			_weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
			weekdaysShort : function (a) {
				return this._weekdaysShort[a.day()]
			},
			_weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
			weekdaysMin : function (a) {
				return this._weekdaysMin[a.day()]
			},
			weekdaysParse : function (a) {
				var b,
				c,
				d;
				for (this._weekdaysParse || (this._weekdaysParse = []), b = 0; 7 > b; b++)
					if (this._weekdaysParse[b] || (c = mb([2e3, 1]).day(b), d = "^" + this.weekdays(c, "") + "|^" + this.weekdaysShort(c, "") + "|^" + this.weekdaysMin(c, ""), this._weekdaysParse[b] = new RegExp(d.replace(".", ""), "i")), this._weekdaysParse[b].test(a))
						return b
			},
			_longDateFormat : {
				LT : "h:mm A",
				L : "MM/DD/YYYY",
				LL : "MMMM D YYYY",
				LLL : "MMMM D YYYY LT",
				LLLL : "dddd, MMMM D YYYY LT"
			},
			longDateFormat : function (a) {
				var b = this._longDateFormat[a];
				return !b && this._longDateFormat[a.toUpperCase()] && (b = this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (a) {
							return a.slice(1)
						}), this._longDateFormat[a] = b),
				b
			},
			isPM : function (a) {
				return "p" === (a + "").toLowerCase().charAt(0)
			},
			_meridiemParse : /[ap]\.?m?\.?/i,
			meridiem : function (a, b, c) {
				return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM"
			},
			_calendar : {
				sameDay : "[Today at] LT",
				nextDay : "[Tomorrow at] LT",
				nextWeek : "dddd [at] LT",
				lastDay : "[Yesterday at] LT",
				lastWeek : "[Last] dddd [at] LT",
				sameElse : "L"
			},
			calendar : function (a, b) {
				var c = this._calendar[a];
				return "function" == typeof c ? c.apply(b) : c
			},
			_relativeTime : {
				future : "in %s",
				past : "%s ago",
				s : "a few seconds",
				m : "a minute",
				mm : "%d minutes",
				h : "an hour",
				hh : "%d hours",
				d : "a day",
				dd : "%d days",
				M : "a month",
				MM : "%d months",
				y : "a year",
				yy : "%d years"
			},
			relativeTime : function (a, b, c, d) {
				var e = this._relativeTime[c];
				return "function" == typeof e ? e(a, b, c, d) : e.replace(/%d/i, a)
			},
			pastFuture : function (a, b) {
				var c = this._relativeTime[a > 0 ? "future" : "past"];
				return "function" == typeof c ? c(b) : c.replace(/%s/i, b)
			},
			ordinal : function (a) {
				return this._ordinal.replace("%d", a)
			},
			_ordinal : "%d",
			preparse : function (a) {
				return a
			},
			postformat : function (a) {
				return a
			},
			week : function (a) {
				return bb(a, this._week.dow, this._week.doy).week
			},
			_week : {
				dow : 0,
				doy : 6
			},
			_invalidDate : "Invalid date",
			invalidDate : function () {
				return this._invalidDate
			}
		}), mb = function (b, d, e, f) {
		var g;
		return "boolean" == typeof e && (f = e, e = a),
		g = {},
		g._isAMomentObject = !0,
		g._i = b,
		g._f = d,
		g._l = e,
		g._strict = f,
		g._isUTC = !1,
		g._pf = c(),
		db(g)
	}, mb.suppressDeprecationWarnings = !1, mb.createFromInputFallback = d("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function (a) {
				a._d = new Date(a._i)
			}), mb.min = function () {
		var a = [].slice.call(arguments, 0);
		return eb("isBefore", a)
	}, mb.max = function () {
		var a = [].slice.call(arguments, 0);
		return eb("isAfter", a)
	}, mb.utc = function (b, d, e, f) {
		var g;
		return "boolean" == typeof e && (f = e, e = a),
		g = {},
		g._isAMomentObject = !0,
		g._useUTC = !0,
		g._isUTC = !0,
		g._l = e,
		g._i = b,
		g._f = d,
		g._strict = f,
		g._pf = c(),
		db(g).utc()
	}, mb.unix = function (a) {
		return mb(1e3 * a)
	}, mb.duration = function (a, b) {
		var c,
		d,
		e,
		f = a,
		g = null;
		return mb.isDuration(a) ? f = {
			ms : a._milliseconds,
			d : a._days,
			M : a._months
		}
		 : "number" == typeof a ? (f = {}, b ? f[b] = a : f.milliseconds = a) : (g = Db.exec(a)) ? (c = "-" === g[1] ? -1 : 1, f = {
				y : 0,
				d : u(g[ub]) * c,
				h : u(g[vb]) * c,
				m : u(g[wb]) * c,
				s : u(g[xb]) * c,
				ms : u(g[yb]) * c
			}) : (g = Eb.exec(a)) && (c = "-" === g[1] ? -1 : 1, e = function (a) {
			var b = a && parseFloat(a.replace(",", "."));
			return (isNaN(b) ? 0 : b) * c
		}, f = {
				y : e(g[2]),
				M : e(g[3]),
				d : e(g[4]),
				h : e(g[5]),
				m : e(g[6]),
				s : e(g[7]),
				w : e(g[8])
			}),
		d = new i(f),
		mb.isDuration(a) && a.hasOwnProperty("_lang") && (d._lang = a._lang),
		d
	}, mb.version = pb, mb.defaultFormat = Yb, mb.ISO_8601 = function () {}, mb.momentProperties = Ab, mb.updateOffset = function () {}, mb.relativeTimeThreshold = function (b, c) {
		return ec[b] === a ? !1 : (ec[b] = c, !0)
	}, mb.lang = function (a, b) {
		var c;
		return a ? (b ? D(B(a), b) : null === b ? (E(a), a = "en") : zb[a] || F(a), c = mb.duration.fn._lang = mb.fn._lang = F(a), c._abbr) : mb.fn._lang._abbr
	}, mb.langData = function (a) {
		return a && a._lang && a._lang._abbr && (a = a._lang._abbr),
		F(a)
	}, mb.isMoment = function (a) {
		return a instanceof h || null != a && a.hasOwnProperty("_isAMomentObject")
	}, mb.isDuration = function (a) {
		return a instanceof i
	}, ob = ic.length - 1; ob >= 0; --ob)
		t(ic[ob]);
	mb.normalizeUnits = function (a) {
		return r(a)
	},
	mb.invalid = function (a) {
		var b = mb.utc(0 / 0);
		return null != a ? j(b._pf, a) : b._pf.userInvalidated = !0,
		b
	},
	mb.parseZone = function () {
		return mb.apply(null, arguments).parseZone()
	},
	mb.parseTwoDigitYear = function (a) {
		return u(a) + (u(a) > 68 ? 1900 : 2e3)
	},
	j(mb.fn = h.prototype, {
		clone : function () {
			return mb(this)
		},
		valueOf : function () {
			return +this._d + 6e4 * (this._offset || 0)
		},
		unix : function () {
			return Math.floor(+this / 1e3)
		},
		toString : function () {
			return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
		},
		toDate : function () {
			return this._offset ? new Date(+this) : this._d
		},
		toISOString : function () {
			var a = mb(this).utc();
			return 0 < a.year() && a.year() <= 9999 ? I(a, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : I(a, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
		},
		toArray : function () {
			var a = this;
			return [a.year(), a.month(), a.date(), a.hours(), a.minutes(), a.seconds(), a.milliseconds()]
		},
		isValid : function () {
			return A(this)
		},
		isDSTShifted : function () {
			return this._a ? this.isValid() && q(this._a, (this._isUTC ? mb.utc(this._a) : mb(this._a)).toArray()) > 0 : !1
		},
		parsingFlags : function () {
			return j({}, this._pf)
		},
		invalidAt : function () {
			return this._pf.overflow
		},
		utc : function () {
			return this.zone(0)
		},
		local : function () {
			return this.zone(0),
			this._isUTC = !1,
			this
		},
		format : function (a) {
			var b = I(this, a || mb.defaultFormat);
			return this.lang().postformat(b)
		},
		add : function (a, b) {
			var c;
			return c = "string" == typeof a && "string" == typeof b ? mb.duration(isNaN(+b) ? +a : +b, isNaN(+b) ? b : a) : "string" == typeof a ? mb.duration(+b, a) : mb.duration(a, b),
			n(this, c, 1),
			this
		},
		subtract : function (a, b) {
			var c;
			return c = "string" == typeof a && "string" == typeof b ? mb.duration(isNaN(+b) ? +a : +b, isNaN(+b) ? b : a) : "string" == typeof a ? mb.duration(+b, a) : mb.duration(a, b),
			n(this, c, -1),
			this
		},
		diff : function (a, b, c) {
			var d,
			e,
			f = C(a, this),
			g = 6e4 * (this.zone() - f.zone());
			return b = r(b),
			"year" === b || "month" === b ? (d = 432e5 * (this.daysInMonth() + f.daysInMonth()), e = 12 * (this.year() - f.year()) + (this.month() - f.month()), e += (this - mb(this).startOf("month") - (f - mb(f).startOf("month"))) / d, e -= 6e4 * (this.zone() - mb(this).startOf("month").zone() - (f.zone() - mb(f).startOf("month").zone())) / d, "year" === b && (e /= 12)) : (d = this - f, e = "second" === b ? d / 1e3 : "minute" === b ? d / 6e4 : "hour" === b ? d / 36e5 : "day" === b ? (d - g) / 864e5 : "week" === b ? (d - g) / 6048e5 : d),
			c ? e : l(e)
		},
		from : function (a, b) {
			return mb.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)
		},
		fromNow : function (a) {
			return this.from(mb(), a)
		},
		calendar : function (a) {
			var b = a || mb(),
			c = C(b, this).startOf("day"),
			d = this.diff(c, "days", !0),
			e = -6 > d ? "sameElse" : -1 > d ? "lastWeek" : 0 > d ? "lastDay" : 1 > d ? "sameDay" : 2 > d ? "nextDay" : 7 > d ? "nextWeek" : "sameElse";
			return this.format(this.lang().calendar(e, this))
		},
		isLeapYear : function () {
			return y(this.year())
		},
		isDST : function () {
			return this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone()
		},
		day : function (a) {
			var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
			return null != a ? (a = $(a, this.lang()), this.add({
					d : a - b
				})) : b
		},
		month : ib("Month", !0),
		startOf : function (a) {
			switch (a = r(a)) {
			case "year":
				this.month(0);
			case "quarter":
			case "month":
				this.date(1);
			case "week":
			case "isoWeek":
			case "day":
				this.hours(0);
			case "hour":
				this.minutes(0);
			case "minute":
				this.seconds(0);
			case "second":
				this.milliseconds(0)
			}
			return "week" === a ? this.weekday(0) : "isoWeek" === a && this.isoWeekday(1),
			"quarter" === a && this.month(3 * Math.floor(this.month() / 3)),
			this
		},
		endOf : function (a) {
			return a = r(a),
			this.startOf(a).add("isoWeek" === a ? "week" : a, 1).subtract("ms", 1)
		},
		isAfter : function (a, b) {
			return b = "undefined" != typeof b ? b : "millisecond",
			+this.clone().startOf(b) > +mb(a).startOf(b)
		},
		isBefore : function (a, b) {
			return b = "undefined" != typeof b ? b : "millisecond",
			+this.clone().startOf(b) < +mb(a).startOf(b)
		},
		isSame : function (a, b) {
			return b = b || "ms",
			+this.clone().startOf(b) === +C(a, this).startOf(b)
		},
		min : d("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function (a) {
			return a = mb.apply(null, arguments),
			this > a ? this : a
		}),
		max : d("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function (a) {
			return a = mb.apply(null, arguments),
			a > this ? this : a
		}),
		zone : function (a, b) {
			var c = this._offset || 0;
			return null == a ? this._isUTC ? c : this._d.getTimezoneOffset() : ("string" == typeof a && (a = L(a)), Math.abs(a) < 16 && (a = 60 * a), this._offset = a, this._isUTC = !0, c !== a && (!b || this._changeInProgress ? n(this, mb.duration(c - a, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, mb.updateOffset(this, !0), this._changeInProgress = null)), this)
		},
		zoneAbbr : function () {
			return this._isUTC ? "UTC" : ""
		},
		zoneName : function () {
			return this._isUTC ? "Coordinated Universal Time" : ""
		},
		parseZone : function () {
			return this._tzm ? this.zone(this._tzm) : "string" == typeof this._i && this.zone(this._i),
			this
		},
		hasAlignedHourOffset : function (a) {
			return a = a ? mb(a).zone() : 0,
			(this.zone() - a) % 60 === 0
		},
		daysInMonth : function () {
			return v(this.year(), this.month())
		},
		dayOfYear : function (a) {
			var b = rb((mb(this).startOf("day") - mb(this).startOf("year")) / 864e5) + 1;
			return null == a ? b : this.add("d", a - b)
		},
		quarter : function (a) {
			return null == a ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (a - 1) + this.month() % 3)
		},
		weekYear : function (a) {
			var b = bb(this, this.lang()._week.dow, this.lang()._week.doy).year;
			return null == a ? b : this.add("y", a - b)
		},
		isoWeekYear : function (a) {
			var b = bb(this, 1, 4).year;
			return null == a ? b : this.add("y", a - b)
		},
		week : function (a) {
			var b = this.lang().week(this);
			return null == a ? b : this.add("d", 7 * (a - b))
		},
		isoWeek : function (a) {
			var b = bb(this, 1, 4).week;
			return null == a ? b : this.add("d", 7 * (a - b))
		},
		weekday : function (a) {
			var b = (this.day() + 7 - this.lang()._week.dow) % 7;
			return null == a ? b : this.add("d", a - b)
		},
		isoWeekday : function (a) {
			return null == a ? this.day() || 7 : this.day(this.day() % 7 ? a : a - 7)
		},
		isoWeeksInYear : function () {
			return w(this.year(), 1, 4)
		},
		weeksInYear : function () {
			var a = this._lang._week;
			return w(this.year(), a.dow, a.doy)
		},
		get : function (a) {
			return a = r(a),
			this[a]()
		},
		set : function (a, b) {
			return a = r(a),
			"function" == typeof this[a] && this[a](b),
			this
		},
		lang : function (b) {
			return b === a ? this._lang : (this._lang = F(b), this)
		}
	}),
	mb.fn.millisecond = mb.fn.milliseconds = ib("Milliseconds", !1),
	mb.fn.second = mb.fn.seconds = ib("Seconds", !1),
	mb.fn.minute = mb.fn.minutes = ib("Minutes", !1),
	mb.fn.hour = mb.fn.hours = ib("Hours", !0),
	mb.fn.date = ib("Date", !0),
	mb.fn.dates = d("dates accessor is deprecated. Use date instead.", ib("Date", !0)),
	mb.fn.year = ib("FullYear", !0),
	mb.fn.years = d("years accessor is deprecated. Use year instead.", ib("FullYear", !0)),
	mb.fn.days = mb.fn.day,
	mb.fn.months = mb.fn.month,
	mb.fn.weeks = mb.fn.week,
	mb.fn.isoWeeks = mb.fn.isoWeek,
	mb.fn.quarters = mb.fn.quarter,
	mb.fn.toJSON = mb.fn.toISOString,
	j(mb.duration.fn = i.prototype, {
		_bubble : function () {
			var a,
			b,
			c,
			d,
			e = this._milliseconds,
			f = this._days,
			g = this._months,
			h = this._data;
			h.milliseconds = e % 1e3,
			a = l(e / 1e3),
			h.seconds = a % 60,
			b = l(a / 60),
			h.minutes = b % 60,
			c = l(b / 60),
			h.hours = c % 24,
			f += l(c / 24),
			h.days = f % 30,
			g += l(f / 30),
			h.months = g % 12,
			d = l(g / 12),
			h.years = d
		},
		weeks : function () {
			return l(this.days() / 7)
		},
		valueOf : function () {
			return this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * u(this._months / 12)
		},
		humanize : function (a) {
			var b = +this,
			c = ab(b, !a, this.lang());
			return a && (c = this.lang().pastFuture(b, c)),
			this.lang().postformat(c)
		},
		add : function (a, b) {
			var c = mb.duration(a, b);
			return this._milliseconds += c._milliseconds,
			this._days += c._days,
			this._months += c._months,
			this._bubble(),
			this
		},
		subtract : function (a, b) {
			var c = mb.duration(a, b);
			return this._milliseconds -= c._milliseconds,
			this._days -= c._days,
			this._months -= c._months,
			this._bubble(),
			this
		},
		get : function (a) {
			return a = r(a),
			this[a.toLowerCase() + "s"]()
		},
		as : function (a) {
			return a = r(a),
			this["as" + a.charAt(0).toUpperCase() + a.slice(1) + "s"]()
		},
		lang : mb.fn.lang,
		toIsoString : function () {
			var a = Math.abs(this.years()),
			b = Math.abs(this.months()),
			c = Math.abs(this.days()),
			d = Math.abs(this.hours()),
			e = Math.abs(this.minutes()),
			f = Math.abs(this.seconds() + this.milliseconds() / 1e3);
			return this.asSeconds() ? (this.asSeconds() < 0 ? "-" : "") + "P" + (a ? a + "Y" : "") + (b ? b + "M" : "") + (c ? c + "D" : "") + (d || e || f ? "T" : "") + (d ? d + "H" : "") + (e ? e + "M" : "") + (f ? f + "S" : "") : "P0D"
		}
	});
	for (ob in ac)
		ac.hasOwnProperty(ob) && (kb(ob, ac[ob]), jb(ob.toLowerCase()));
	kb("Weeks", 6048e5),
	mb.duration.fn.asMonths = function () {
		return (+this - 31536e6 * this.years()) / 2592e6 + 12 * this.years()
	},
	mb.lang("en", {
		ordinal : function (a) {
			var b = a % 10,
			c = 1 === u(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
			return a + c
		}
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ar-ma", {
			months : "?????_??????_????_?????_???_?????_??????_???_?????_??????_?????_?????".split("_"),
			monthsShort : "?????_??????_????_?????_???_?????_??????_???_?????_??????_?????_?????".split("_"),
			weekdays : "?????_???????_????????_????????_??????_??????_?????".split("_"),
			weekdaysShort : "???_?????_??????_??????_????_????_???".split("_"),
			weekdaysMin : "?_?_?_?_?_?_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[????? ??? ??????] LT",
				nextDay : "[??? ??? ??????] LT",
				nextWeek : "dddd [??? ??????] LT",
				lastDay : "[??? ??? ??????] LT",
				lastWeek : "dddd [??? ??????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "?? %s",
				past : "??? %s",
				s : "????",
				m : "?????",
				mm : "%d ?????",
				h : "????",
				hh : "%d ?????",
				d : "???",
				dd : "%d ????",
				M : "???",
				MM : "%d ????",
				y : "???",
				yy : "%d ?????"
			},
			week : {
				dow : 6,
				doy : 12
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("ar-sa", {
			months : "?????_??????_????_?????_????_?????_?????_?????_??????_??????_??????_??????".split("_"),
			monthsShort : "?????_??????_????_?????_????_?????_?????_?????_??????_??????_??????_??????".split("_"),
			weekdays : "?????_???????_????????_????????_??????_??????_?????".split("_"),
			weekdaysShort : "???_?????_??????_??????_????_????_???".split("_"),
			weekdaysMin : "?_?_?_?_?_?_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			meridiem : function (a) {
				return 12 > a ? "?" : "?"
			},
			calendar : {
				sameDay : "[????? ??? ??????] LT",
				nextDay : "[??? ??? ??????] LT",
				nextWeek : "dddd [??? ??????] LT",
				lastDay : "[??? ??? ??????] LT",
				lastWeek : "dddd [??? ??????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "?? %s",
				past : "??? %s",
				s : "????",
				m : "?????",
				mm : "%d ?????",
				h : "????",
				hh : "%d ?????",
				d : "???",
				dd : "%d ????",
				M : "???",
				MM : "%d ????",
				y : "???",
				yy : "%d ?????"
			},
			preparse : function (a) {
				return a.replace(/[?-?]/g, function (a) {
					return c[a]
				}).replace(/?/g, ",")
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				}).replace(/,/g, "?")
			},
			week : {
				dow : 6,
				doy : 12
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("ar", {
			months : "?????/ ????? ??????_??????/ ????_????/ ????_?????/ ?????_????/ ????_?????/ ??????_?????/ ????_?????/ ??_??????/ ?????_??????/ ????? ?????_??????/ ????? ??????_??????/ ????? ?????".split("_"),
			monthsShort : "?????/ ????? ??????_??????/ ????_????/ ????_?????/ ?????_????/ ????_?????/ ??????_?????/ ????_?????/ ??_??????/ ?????_??????/ ????? ?????_??????/ ????? ??????_??????/ ????? ?????".split("_"),
			weekdays : "?????_???????_????????_????????_??????_??????_?????".split("_"),
			weekdaysShort : "???_?????_??????_??????_????_????_???".split("_"),
			weekdaysMin : "?_?_?_?_?_?_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			meridiem : function (a) {
				return 12 > a ? "?" : "?"
			},
			calendar : {
				sameDay : "[????? ??? ??????] LT",
				nextDay : "[??? ??? ??????] LT",
				nextWeek : "dddd [??? ??????] LT",
				lastDay : "[??? ??? ??????] LT",
				lastWeek : "dddd [??? ??????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "?? %s",
				past : "??? %s",
				s : "????",
				m : "?????",
				mm : "%d ?????",
				h : "????",
				hh : "%d ?????",
				d : "???",
				dd : "%d ????",
				M : "???",
				MM : "%d ????",
				y : "???",
				yy : "%d ?????"
			},
			preparse : function (a) {
				return a.replace(/[?-?]/g, function (a) {
					return c[a]
				}).replace(/?/g, ",")
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				}).replace(/,/g, "?")
			},
			week : {
				dow : 6,
				doy : 12
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "-inci",
			5 : "-inci",
			8 : "-inci",
			70 : "-inci",
			80 : "-inci",
			2 : "-nci",
			7 : "-nci",
			20 : "-nci",
			50 : "-nci",
			3 : "-üncü",
			4 : "-üncü",
			100 : "-üncü",
			6 : "-nc?",
			9 : "-uncu",
			10 : "-uncu",
			30 : "-uncu",
			60 : "-?nc?",
			90 : "-?nc?"
		};
		return a.lang("az", {
			months : "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
			monthsShort : "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
			weekdays : "Bazar_Bazar ert?si_??r??nb? ax?am?_??r??nb?_Cüm? ax?am?_Cüm?_??nb?".split("_"),
			weekdaysShort : "Baz_BzE_?Ax_??r_CAx_Cüm_??n".split("_"),
			weekdaysMin : "Bz_BE_?A_??_CA_Cü_??".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[bugün saat] LT",
				nextDay : "[sabah saat] LT",
				nextWeek : "[g?l?n h?ft?] dddd [saat] LT",
				lastDay : "[dün?n] LT",
				lastWeek : "[ke??n h?ft?] dddd [saat] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s sonra",
				past : "%s ?vv?l",
				s : "birne?? saniyy?",
				m : "bir d?qiq?",
				mm : "%d d?qiq?",
				h : "bir saat",
				hh : "%d saat",
				d : "bir gün",
				dd : "%d gün",
				M : "bir ay",
				MM : "%d ay",
				y : "bir il",
				yy : "%d il"
			},
			meridiem : function (a) {
				return 4 > a ? "gec?" : 12 > a ? "s?h?r" : 17 > a ? "gündüz" : "ax?am"
			},
			ordinal : function (a) {
				if (0 === a)
					return a + "-?nc?";
				var c = a % 10,
				d = a % 100 - c,
				e = a >= 100 ? 100 : null;
				return a + (b[c] || b[d] || b[e])
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("bg", {
			months : "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
			monthsShort : "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
			weekdays : "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
			weekdaysShort : "нед_пон_вто_сря_чет_пет_съб".split("_"),
			weekdaysMin : "нд_пн_вт_ср_чт_пт_сб".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "D.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Днес в] LT",
				nextDay : "[Утре в] LT",
				nextWeek : "dddd [в] LT",
				lastDay : "[Вчера в] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
					case 3:
					case 6:
						return "[В изминалата] dddd [в] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[В изминалия] dddd [в] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "след %s",
				past : "преди %s",
				s : "няколко секунди",
				m : "минута",
				mm : "%d минути",
				h : "час",
				hh : "%d часа",
				d : "ден",
				dd : "%d дни",
				M : "месец",
				MM : "%d месеца",
				y : "година",
				yy : "%d години"
			},
			ordinal : function (a) {
				var b = a % 10,
				c = a % 100;
				return 0 === a ? a + "-ев" : 0 === c ? a + "-ен" : c > 10 && 20 > c ? a + "-ти" : 1 === b ? a + "-ви" : 2 === b ? a + "-ри" : 7 === b || 8 === b ? a + "-ми" : a + "-ти"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("bn", {
			months : "????????_????????_?????_??????_??_???_?????_??????_??????????_???????_???????_????????".split("_"),
			monthsShort : "????_???_?????_???_??_???_???_??_?????_?????_??_??????".split("_"),
			weekdays : "??????_??????_????????_??????_?????????????_?????????_??????".split("_"),
			weekdaysShort : "???_???_?????_???_??????????_??????_???".split("_"),
			weekdaysMin : "??_??_????_??_?????_??_???".split("_"),
			longDateFormat : {
				LT : "A h:mm ???",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY, LT",
				LLLL : "dddd, D MMMM YYYY, LT"
			},
			calendar : {
				sameDay : "[??] LT",
				nextDay : "[????????] LT",
				nextWeek : "dddd, LT",
				lastDay : "[?????] LT",
				lastWeek : "[??] dddd, LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ???",
				past : "%s ???",
				s : "??? ???????",
				m : "?? ?????",
				mm : "%d ?????",
				h : "?? ?????",
				hh : "%d ?????",
				d : "?? ???",
				dd : "%d ???",
				M : "?? ???",
				MM : "%d ???",
				y : "?? ???",
				yy : "%d ???"
			},
			preparse : function (a) {
				return a.replace(/[??????????]/g, function (a) {
					return c[a]
				})
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				})
			},
			meridiem : function (a) {
				return 4 > a ? "???" : 10 > a ? "????" : 17 > a ? "?????" : 20 > a ? "?????" : "???"
			},
			week : {
				dow : 0,
				doy : 6
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (b) {
		function c(a, b, c) {
			var d = {
				mm : "munutenn",
				MM : "miz",
				dd : "devezh"
			};
			return a + " " + f(d[c], a)
		}
		function d(a) {
			switch (e(a)) {
			case 1:
			case 3:
			case 4:
			case 5:
			case 9:
				return a + " bloaz";
			default:
				return a + " vloaz"
			}
		}
		function e(a) {
			return a > 9 ? e(a % 10) : a
		}
		function f(a, b) {
			return 2 === b ? g(a) : a
		}
		function g(b) {
			var c = {
				m : "v",
				b : "v",
				d : "z"
			};
			return c[b.charAt(0)] === a ? b : c[b.charAt(0)] + b.substring(1)
		}
		return b.lang("br", {
			months : "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
			monthsShort : "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
			weekdays : "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
			weekdaysShort : "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
			weekdaysMin : "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
			longDateFormat : {
				LT : "h[e]mm A",
				L : "DD/MM/YYYY",
				LL : "D [a viz] MMMM YYYY",
				LLL : "D [a viz] MMMM YYYY LT",
				LLLL : "dddd, D [a viz] MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Hiziv da] LT",
				nextDay : "[Warc'hoazh da] LT",
				nextWeek : "dddd [da] LT",
				lastDay : "[Dec'h da] LT",
				lastWeek : "dddd [paset da] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "a-benn %s",
				past : "%s 'zo",
				s : "un nebeud segondennoù",
				m : "ur vunutenn",
				mm : c,
				h : "un eur",
				hh : "%d eur",
				d : "un devezh",
				dd : c,
				M : "ur miz",
				MM : c,
				y : "ur bloaz",
				yy : d
			},
			ordinal : function (a) {
				var b = 1 === a ? "a?" : "vet";
				return a + b
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = a + " ";
			switch (c) {
			case "m":
				return b ? "jedna minuta" : "jedne minute";
			case "mm":
				return d += 1 === a ? "minuta" : 2 === a || 3 === a || 4 === a ? "minute" : "minuta";
			case "h":
				return b ? "jedan sat" : "jednog sata";
			case "hh":
				return d += 1 === a ? "sat" : 2 === a || 3 === a || 4 === a ? "sata" : "sati";
			case "dd":
				return d += 1 === a ? "dan" : "dana";
			case "MM":
				return d += 1 === a ? "mjesec" : 2 === a || 3 === a || 4 === a ? "mjeseca" : "mjeseci";
			case "yy":
				return d += 1 === a ? "godina" : 2 === a || 3 === a || 4 === a ? "godine" : "godina"
			}
		}
		return a.lang("bs", {
			months : "januar_februar_mart_april_maj_juni_juli_avgust_septembar_oktobar_novembar_decembar".split("_"),
			monthsShort : "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
			weekdays : "nedjelja_ponedjeljak_utorak_srijeda_?etvrtak_petak_subota".split("_"),
			weekdaysShort : "ned._pon._uto._sri._?et._pet._sub.".split("_"),
			weekdaysMin : "ne_po_ut_sr_?e_pe_su".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD. MM. YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[danas u] LT",
				nextDay : "[sutra u] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[u] [nedjelju] [u] LT";
					case 3:
						return "[u] [srijedu] [u] LT";
					case 6:
						return "[u] [subotu] [u] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[u] dddd [u] LT"
					}
				},
				lastDay : "[ju?er u] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
					case 3:
						return "[pro?lu] dddd [u] LT";
					case 6:
						return "[pro?le] [subote] [u] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[pro?li] dddd [u] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "za %s",
				past : "prije %s",
				s : "par sekundi",
				m : b,
				mm : b,
				h : b,
				hh : b,
				d : "dan",
				dd : b,
				M : "mjesec",
				MM : b,
				y : "godinu",
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ca", {
			months : "gener_febrer_mar?_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
			monthsShort : "gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.".split("_"),
			weekdays : "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
			weekdaysShort : "dg._dl._dt._dc._dj._dv._ds.".split("_"),
			weekdaysMin : "Dg_Dl_Dt_Dc_Dj_Dv_Ds".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : function () {
					return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
				},
				nextDay : function () {
					return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT"
				},
				nextWeek : function () {
					return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
				},
				lastDay : function () {
					return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
				},
				lastWeek : function () {
					return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT"
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "en %s",
				past : "fa %s",
				s : "uns segons",
				m : "un minut",
				mm : "%d minuts",
				h : "una hora",
				hh : "%d hores",
				d : "un dia",
				dd : "%d dies",
				M : "un mes",
				MM : "%d mesos",
				y : "un any",
				yy : "%d anys"
			},
			ordinal : "%do",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a) {
			return a > 1 && 5 > a && 1 !== ~~(a / 10)
		}
		function c(a, c, d, e) {
			var f = a + " ";
			switch (d) {
			case "s":
				return c || e ? "pár sekund" : "pár sekundami";
			case "m":
				return c ? "minuta" : e ? "minutu" : "minutou";
			case "mm":
				return c || e ? f + (b(a) ? "minuty" : "minut") : f + "minutami";
				break;
			case "h":
				return c ? "hodina" : e ? "hodinu" : "hodinou";
			case "hh":
				return c || e ? f + (b(a) ? "hodiny" : "hodin") : f + "hodinami";
				break;
			case "d":
				return c || e ? "den" : "dnem";
			case "dd":
				return c || e ? f + (b(a) ? "dny" : "dní") : f + "dny";
				break;
			case "M":
				return c || e ? "měsíc" : "měsícem";
			case "MM":
				return c || e ? f + (b(a) ? "měsíce" : "měsíc?") : f + "měsíci";
				break;
			case "y":
				return c || e ? "rok" : "rokem";
			case "yy":
				return c || e ? f + (b(a) ? "roky" : "let") : f + "lety"
			}
		}
		var d = "leden_únor_b?ezen_duben_květen_?erven_?ervenec_srpen_zá?í_?íjen_listopad_prosinec".split("_"),
		e = "led_úno_b?e_dub_kvě_?vn_?vc_srp_zá?_?íj_lis_pro".split("_");
		return a.lang("cs", {
			months : d,
			monthsShort : e,
			monthsParse : function (a, b) {
				var c,
				d = [];
				for (c = 0; 12 > c; c++)
					d[c] = new RegExp("^" + a[c] + "$|^" + b[c] + "$", "i");
				return d
			}
			(d, e),
			weekdays : "neděle_pondělí_útery_st?eda_?tvrtek_pátek_sobota".split("_"),
			weekdaysShort : "ne_po_út_st_?t_pá_so".split("_"),
			weekdaysMin : "ne_po_út_st_?t_pá_so".split("_"),
			longDateFormat : {
				LT : "H.mm",
				L : "DD.?MM.?YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[dnes v] LT",
				nextDay : "[zítra v] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[v neděli v] LT";
					case 1:
					case 2:
						return "[v] dddd [v] LT";
					case 3:
						return "[ve st?edu v] LT";
					case 4:
						return "[ve ?tvrtek v] LT";
					case 5:
						return "[v pátek v] LT";
					case 6:
						return "[v sobotu v] LT"
					}
				},
				lastDay : "[v?era v] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
						return "[minulou neděli v] LT";
					case 1:
					case 2:
						return "[minulé] dddd [v] LT";
					case 3:
						return "[minulou st?edu v] LT";
					case 4:
					case 5:
						return "[minuly] dddd [v] LT";
					case 6:
						return "[minulou sobotu v] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "za %s",
				past : "p?ed %s",
				s : c,
				m : c,
				mm : c,
				h : c,
				hh : c,
				d : c,
				dd : c,
				M : c,
				MM : c,
				y : c,
				yy : c
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("cv", {
			months : "к?рлач_нар?с_пуш_ака_май_??ртме_ут?_?урла_ав?н_юпа_ч?к_раштав".split("_"),
			monthsShort : "к?р_нар_пуш_ака_май_??р_ут?_?ур_ав_юпа_ч?к_раш".split("_"),
			weekdays : "вырсарникун_тунтикун_ытларикун_юнкун_к??нерникун_эрнекун_ш?маткун".split("_"),
			weekdaysShort : "выр_тун_ытл_юн_к??_эрн_ш?м".split("_"),
			weekdaysMin : "вр_тн_ыт_юн_к?_эр_шм".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD-MM-YYYY",
				LL : "YYYY [?улхи] MMMM [уй?х?н] D[-м?ш?]",
				LLL : "YYYY [?улхи] MMMM [уй?х?н] D[-м?ш?], LT",
				LLLL : "dddd, YYYY [?улхи] MMMM [уй?х?н] D[-м?ш?], LT"
			},
			calendar : {
				sameDay : "[Паян] LT [сехетре]",
				nextDay : "[Ыран] LT [сехетре]",
				lastDay : "[?нер] LT [сехетре]",
				nextWeek : "[?итес] dddd LT [сехетре]",
				lastWeek : "[Иртн?] dddd LT [сехетре]",
				sameElse : "L"
			},
			relativeTime : {
				future : function (a) {
					var b = /сехет$/i.exec(a) ? "рен" : /?ул$/i.exec(a) ? "тан" : "ран";
					return a + b
				},
				past : "%s каялла",
				s : "п?р-ик ?еккунт",
				m : "п?р минут",
				mm : "%d минут",
				h : "п?р сехет",
				hh : "%d сехет",
				d : "п?р кун",
				dd : "%d кун",
				M : "п?р уй?х",
				MM : "%d уй?х",
				y : "п?р ?ул",
				yy : "%d ?ул"
			},
			ordinal : "%d-м?ш",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("cy", {
			months : "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
			monthsShort : "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
			weekdays : "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
			weekdaysShort : "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
			weekdaysMin : "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Heddiw am] LT",
				nextDay : "[Yfory am] LT",
				nextWeek : "dddd [am] LT",
				lastDay : "[Ddoe am] LT",
				lastWeek : "dddd [diwethaf am] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "mewn %s",
				past : "%s yn ?l",
				s : "ychydig eiliadau",
				m : "munud",
				mm : "%d munud",
				h : "awr",
				hh : "%d awr",
				d : "diwrnod",
				dd : "%d diwrnod",
				M : "mis",
				MM : "%d mis",
				y : "blwyddyn",
				yy : "%d flynedd"
			},
			ordinal : function (a) {
				var b = a,
				c = "",
				d = ["", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed"];
				return b > 20 ? c = 40 === b || 50 === b || 60 === b || 80 === b || 100 === b ? "fed" : "ain" : b > 0 && (c = d[b]),
				a + c
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("da", {
			months : "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
			monthsShort : "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
			weekdays : "s?ndag_mandag_tirsdag_onsdag_torsdag_fredag_l?rdag".split("_"),
			weekdaysShort : "s?n_man_tir_ons_tor_fre_l?r".split("_"),
			weekdaysMin : "s?_ma_ti_on_to_fr_l?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd [d.] D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[I dag kl.] LT",
				nextDay : "[I morgen kl.] LT",
				nextWeek : "dddd [kl.] LT",
				lastDay : "[I g?r kl.] LT",
				lastWeek : "[sidste] dddd [kl] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "om %s",
				past : "%s siden",
				s : "f? sekunder",
				m : "et minut",
				mm : "%d minutter",
				h : "en time",
				hh : "%d timer",
				d : "en dag",
				dd : "%d dage",
				M : "en m?ned",
				MM : "%d m?neder",
				y : "et ?r",
				yy : "%d ?r"
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = {
				m : ["eine Minute", "einer Minute"],
				h : ["eine Stunde", "einer Stunde"],
				d : ["ein Tag", "einem Tag"],
				dd : [a + " Tage", a + " Tagen"],
				M : ["ein Monat", "einem Monat"],
				MM : [a + " Monate", a + " Monaten"],
				y : ["ein Jahr", "einem Jahr"],
				yy : [a + " Jahre", a + " Jahren"]
			};
			return b ? d[c][0] : d[c][1]
		}
		return a.lang("de-at", {
			months : "J?nner_Februar_M?rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
			monthsShort : "J?n._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
			weekdays : "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
			weekdaysShort : "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
			weekdaysMin : "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm [Uhr]",
				L : "DD.MM.YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Heute um] LT",
				sameElse : "L",
				nextDay : "[Morgen um] LT",
				nextWeek : "dddd [um] LT",
				lastDay : "[Gestern um] LT",
				lastWeek : "[letzten] dddd [um] LT"
			},
			relativeTime : {
				future : "in %s",
				past : "vor %s",
				s : "ein paar Sekunden",
				m : b,
				mm : "%d Minuten",
				h : b,
				hh : "%d Stunden",
				d : b,
				dd : b,
				M : b,
				MM : b,
				y : b,
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = {
				m : ["eine Minute", "einer Minute"],
				h : ["eine Stunde", "einer Stunde"],
				d : ["ein Tag", "einem Tag"],
				dd : [a + " Tage", a + " Tagen"],
				M : ["ein Monat", "einem Monat"],
				MM : [a + " Monate", a + " Monaten"],
				y : ["ein Jahr", "einem Jahr"],
				yy : [a + " Jahre", a + " Jahren"]
			};
			return b ? d[c][0] : d[c][1]
		}
		return a.lang("de", {
			months : "Januar_Februar_M?rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
			monthsShort : "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
			weekdays : "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
			weekdaysShort : "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
			weekdaysMin : "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm [Uhr]",
				L : "DD.MM.YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Heute um] LT",
				sameElse : "L",
				nextDay : "[Morgen um] LT",
				nextWeek : "dddd [um] LT",
				lastDay : "[Gestern um] LT",
				lastWeek : "[letzten] dddd [um] LT"
			},
			relativeTime : {
				future : "in %s",
				past : "vor %s",
				s : "ein paar Sekunden",
				m : b,
				mm : "%d Minuten",
				h : b,
				hh : "%d Stunden",
				d : b,
				dd : b,
				M : b,
				MM : b,
				y : b,
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("el", {
			monthsNominativeEl : "Ιανου?ριο?_Φεβρου?ριο?_Μ?ρτιο?_Απρ?λιο?_Μ?ιο?_Ιο?νιο?_Ιο?λιο?_Α?γουστο?_Σεπτ?μβριο?_Οκτ?βριο?_Νο?μβριο?_Δεκ?μβριο?".split("_"),
			monthsGenitiveEl : "Ιανουαρ?ου_Φεβρουαρ?ου_Μαρτ?ου_Απριλ?ου_Μα?ου_Ιουν?ου_Ιουλ?ου_Αυγο?στου_Σεπτεμβρ?ου_Οκτωβρ?ου_Νοεμβρ?ου_Δεκεμβρ?ου".split("_"),
			months : function (a, b) {
				return /D/.test(b.substring(0, b.indexOf("MMMM"))) ? this._monthsGenitiveEl[a.month()] : this._monthsNominativeEl[a.month()]
			},
			monthsShort : "Ιαν_Φεβ_Μαρ_Απρ_Μα?_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
			weekdays : "Κυριακ?_Δευτ?ρα_Τρ?τη_Τετ?ρτη_Π?μπτη_Παρασκευ?_Σ?ββατο".split("_"),
			weekdaysShort : "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
			weekdaysMin : "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
			meridiem : function (a, b, c) {
				return a > 11 ? c ? "μμ" : "ΜΜ" : c ? "πμ" : "ΠΜ"
			},
			longDateFormat : {
				LT : "h:mm A",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendarEl : {
				sameDay : "[Σ?μερα {}] LT",
				nextDay : "[Α?ριο {}] LT",
				nextWeek : "dddd [{}] LT",
				lastDay : "[Χθε? {}] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 6:
						return "[το προηγο?μενο] dddd [{}] LT";
					default:
						return "[την προηγο?μενη] dddd [{}] LT"
					}
				},
				sameElse : "L"
			},
			calendar : function (a, b) {
				var c = this._calendarEl[a],
				d = b && b.hours();
				return "function" == typeof c && (c = c.apply(b)),
				c.replace("{}", d % 12 === 1 ? "στη" : "στι?")
			},
			relativeTime : {
				future : "σε %s",
				past : "%s πριν",
				s : "δευτερ?λεπτα",
				m : "?να λεπτ?",
				mm : "%d λεπτ?",
				h : "μ?α ?ρα",
				hh : "%d ?ρε?",
				d : "μ?α μ?ρα",
				dd : "%d μ?ρε?",
				M : "?να? μ?να?",
				MM : "%d μ?νε?",
				y : "?να? χρ?νο?",
				yy : "%d χρ?νια"
			},
			ordinal : function (a) {
				return a + "η"
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("en-au", {
			months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
			monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
			weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
			weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
			weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
			longDateFormat : {
				LT : "h:mm A",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Today at] LT",
				nextDay : "[Tomorrow at] LT",
				nextWeek : "dddd [at] LT",
				lastDay : "[Yesterday at] LT",
				lastWeek : "[Last] dddd [at] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "in %s",
				past : "%s ago",
				s : "a few seconds",
				m : "a minute",
				mm : "%d minutes",
				h : "an hour",
				hh : "%d hours",
				d : "a day",
				dd : "%d days",
				M : "a month",
				MM : "%d months",
				y : "a year",
				yy : "%d years"
			},
			ordinal : function (a) {
				var b = a % 10,
				c = 1 === ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
				return a + c
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("en-ca", {
			months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
			monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
			weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
			weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
			weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
			longDateFormat : {
				LT : "h:mm A",
				L : "YYYY-MM-DD",
				LL : "D MMMM, YYYY",
				LLL : "D MMMM, YYYY LT",
				LLLL : "dddd, D MMMM, YYYY LT"
			},
			calendar : {
				sameDay : "[Today at] LT",
				nextDay : "[Tomorrow at] LT",
				nextWeek : "dddd [at] LT",
				lastDay : "[Yesterday at] LT",
				lastWeek : "[Last] dddd [at] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "in %s",
				past : "%s ago",
				s : "a few seconds",
				m : "a minute",
				mm : "%d minutes",
				h : "an hour",
				hh : "%d hours",
				d : "a day",
				dd : "%d days",
				M : "a month",
				MM : "%d months",
				y : "a year",
				yy : "%d years"
			},
			ordinal : function (a) {
				var b = a % 10,
				c = 1 === ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
				return a + c
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("en-gb", {
			months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
			monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
			weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
			weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
			weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Today at] LT",
				nextDay : "[Tomorrow at] LT",
				nextWeek : "dddd [at] LT",
				lastDay : "[Yesterday at] LT",
				lastWeek : "[Last] dddd [at] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "in %s",
				past : "%s ago",
				s : "a few seconds",
				m : "a minute",
				mm : "%d minutes",
				h : "an hour",
				hh : "%d hours",
				d : "a day",
				dd : "%d days",
				M : "a month",
				MM : "%d months",
				y : "a year",
				yy : "%d years"
			},
			ordinal : function (a) {
				var b = a % 10,
				c = 1 === ~~(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
				return a + c
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("eo", {
			months : "januaro_februaro_marto_aprilo_majo_junio_julio_a?gusto_septembro_oktobro_novembro_decembro".split("_"),
			monthsShort : "jan_feb_mar_apr_maj_jun_jul_a?g_sep_okt_nov_dec".split("_"),
			weekdays : "Diman?o_Lundo_Mardo_Merkredo_?a?do_Vendredo_Sabato".split("_"),
			weekdaysShort : "Dim_Lun_Mard_Merk_?a?_Ven_Sab".split("_"),
			weekdaysMin : "Di_Lu_Ma_Me_?a_Ve_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "YYYY-MM-DD",
				LL : "D[-an de] MMMM, YYYY",
				LLL : "D[-an de] MMMM, YYYY LT",
				LLLL : "dddd, [la] D[-an de] MMMM, YYYY LT"
			},
			meridiem : function (a, b, c) {
				return a > 11 ? c ? "p.t.m." : "P.T.M." : c ? "a.t.m." : "A.T.M."
			},
			calendar : {
				sameDay : "[Hodia? je] LT",
				nextDay : "[Morga? je] LT",
				nextWeek : "dddd [je] LT",
				lastDay : "[Hiera? je] LT",
				lastWeek : "[pasinta] dddd [je] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "je %s",
				past : "anta? %s",
				s : "sekundoj",
				m : "minuto",
				mm : "%d minutoj",
				h : "horo",
				hh : "%d horoj",
				d : "tago",
				dd : "%d tagoj",
				M : "monato",
				MM : "%d monatoj",
				y : "jaro",
				yy : "%d jaroj"
			},
			ordinal : "%da",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
		c = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_");
		return a.lang("es", {
			months : "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
			monthsShort : function (a, d) {
				return /-MMM-/.test(d) ? c[a.month()] : b[a.month()]
			},
			weekdays : "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
			weekdaysShort : "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
			weekdaysMin : "Do_Lu_Ma_Mi_Ju_Vi_Sá".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD/MM/YYYY",
				LL : "D [de] MMMM [del] YYYY",
				LLL : "D [de] MMMM [del] YYYY LT",
				LLLL : "dddd, D [de] MMMM [del] YYYY LT"
			},
			calendar : {
				sameDay : function () {
					return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
				},
				nextDay : function () {
					return "[ma?ana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
				},
				nextWeek : function () {
					return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
				},
				lastDay : function () {
					return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
				},
				lastWeek : function () {
					return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "en %s",
				past : "hace %s",
				s : "unos segundos",
				m : "un minuto",
				mm : "%d minutos",
				h : "una hora",
				hh : "%d horas",
				d : "un día",
				dd : "%d días",
				M : "un mes",
				MM : "%d meses",
				y : "un a?o",
				yy : "%d a?os"
			},
			ordinal : "%do",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c, d) {
			var e = {
				s : ["m?ne sekundi", "m?ni sekund", "paar sekundit"],
				m : ["ühe minuti", "üks minut"],
				mm : [a + " minuti", a + " minutit"],
				h : ["ühe tunni", "tund aega", "üks tund"],
				hh : [a + " tunni", a + " tundi"],
				d : ["ühe p?eva", "üks p?ev"],
				M : ["kuu aja", "kuu aega", "üks kuu"],
				MM : [a + " kuu", a + " kuud"],
				y : ["ühe aasta", "aasta", "üks aasta"],
				yy : [a + " aasta", a + " aastat"]
			};
			return b ? e[c][2] ? e[c][2] : e[c][1] : d ? e[c][0] : e[c][1]
		}
		return a.lang("et", {
			months : "jaanuar_veebruar_m?rts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
			monthsShort : "jaan_veebr_m?rts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
			weekdays : "pühap?ev_esmasp?ev_teisip?ev_kolmap?ev_neljap?ev_reede_laup?ev".split("_"),
			weekdaysShort : "P_E_T_K_N_R_L".split("_"),
			weekdaysMin : "P_E_T_K_N_R_L".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD.MM.YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[T?na,] LT",
				nextDay : "[Homme,] LT",
				nextWeek : "[J?rgmine] dddd LT",
				lastDay : "[Eile,] LT",
				lastWeek : "[Eelmine] dddd LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s p?rast",
				past : "%s tagasi",
				s : b,
				m : b,
				mm : b,
				h : b,
				hh : b,
				d : b,
				dd : "%d p?eva",
				M : b,
				MM : b,
				y : b,
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("eu", {
			months : "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
			monthsShort : "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
			weekdays : "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
			weekdaysShort : "ig._al._ar._az._og._ol._lr.".split("_"),
			weekdaysMin : "ig_al_ar_az_og_ol_lr".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "YYYY-MM-DD",
				LL : "YYYY[ko] MMMM[ren] D[a]",
				LLL : "YYYY[ko] MMMM[ren] D[a] LT",
				LLLL : "dddd, YYYY[ko] MMMM[ren] D[a] LT",
				l : "YYYY-M-D",
				ll : "YYYY[ko] MMM D[a]",
				lll : "YYYY[ko] MMM D[a] LT",
				llll : "ddd, YYYY[ko] MMM D[a] LT"
			},
			calendar : {
				sameDay : "[gaur] LT[etan]",
				nextDay : "[bihar] LT[etan]",
				nextWeek : "dddd LT[etan]",
				lastDay : "[atzo] LT[etan]",
				lastWeek : "[aurreko] dddd LT[etan]",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s barru",
				past : "duela %s",
				s : "segundo batzuk",
				m : "minutu bat",
				mm : "%d minutu",
				h : "ordu bat",
				hh : "%d ordu",
				d : "egun bat",
				dd : "%d egun",
				M : "hilabete bat",
				MM : "%d hilabete",
				y : "urte bat",
				yy : "%d urte"
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("fa", {
			months : "??????_?????_????_?????_??_????_?????_???_???????_?????_??????_??????".split("_"),
			monthsShort : "??????_?????_????_?????_??_????_?????_???_???????_?????_??????_??????".split("_"),
			weekdays : "???????_??????_???????_????????_????????_????_????".split("_"),
			weekdaysShort : "???????_??????_???????_????????_????????_????_????".split("_"),
			weekdaysMin : "?_?_?_?_?_?_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			meridiem : function (a) {
				return 12 > a ? "??? ?? ???" : "??? ?? ???"
			},
			calendar : {
				sameDay : "[????? ????] LT",
				nextDay : "[???? ????] LT",
				nextWeek : "dddd [????] LT",
				lastDay : "[????? ????] LT",
				lastWeek : "dddd [???] [????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "?? %s",
				past : "%s ???",
				s : "????? ?????",
				m : "?? ?????",
				mm : "%d ?????",
				h : "?? ????",
				hh : "%d ????",
				d : "?? ???",
				dd : "%d ???",
				M : "?? ???",
				MM : "%d ???",
				y : "?? ???",
				yy : "%d ???"
			},
			preparse : function (a) {
				return a.replace(/[?-?]/g, function (a) {
					return c[a]
				}).replace(/?/g, ",")
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				}).replace(/,/g, "?")
			},
			ordinal : "%d?",
			week : {
				dow : 6,
				doy : 12
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, d, e) {
			var f = "";
			switch (d) {
			case "s":
				return e ? "muutaman sekunnin" : "muutama sekunti";
			case "m":
				return e ? "minuutin" : "minuutti";
			case "mm":
				f = e ? "minuutin" : "minuuttia";
				break;
			case "h":
				return e ? "tunnin" : "tunti";
			case "hh":
				f = e ? "tunnin" : "tuntia";
				break;
			case "d":
				return e ? "p?iv?n" : "p?iv?";
			case "dd":
				f = e ? "p?iv?n" : "p?iv??";
				break;
			case "M":
				return e ? "kuukauden" : "kuukausi";
			case "MM":
				f = e ? "kuukauden" : "kuukautta";
				break;
			case "y":
				return e ? "vuoden" : "vuosi";
			case "yy":
				f = e ? "vuoden" : "vuotta"
			}
			return f = c(a, e) + " " + f
		}
		function c(a, b) {
			return 10 > a ? b ? e[a] : d[a] : a
		}
		var d = "nolla yksi kaksi kolme nelj? viisi kuusi seitsem?n kahdeksan yhdeks?n".split(" "),
		e = ["nolla", "yhden", "kahden", "kolmen", "nelj?n", "viiden", "kuuden", d[7], d[8], d[9]];
		return a.lang("fi", {
			months : "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kes?kuu_hein?kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
			monthsShort : "tammi_helmi_maalis_huhti_touko_kes?_hein?_elo_syys_loka_marras_joulu".split("_"),
			weekdays : "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
			weekdaysShort : "su_ma_ti_ke_to_pe_la".split("_"),
			weekdaysMin : "su_ma_ti_ke_to_pe_la".split("_"),
			longDateFormat : {
				LT : "HH.mm",
				L : "DD.MM.YYYY",
				LL : "Do MMMM[ta] YYYY",
				LLL : "Do MMMM[ta] YYYY, [klo] LT",
				LLLL : "dddd, Do MMMM[ta] YYYY, [klo] LT",
				l : "D.M.YYYY",
				ll : "Do MMM YYYY",
				lll : "Do MMM YYYY, [klo] LT",
				llll : "ddd, Do MMM YYYY, [klo] LT"
			},
			calendar : {
				sameDay : "[t?n??n] [klo] LT",
				nextDay : "[huomenna] [klo] LT",
				nextWeek : "dddd [klo] LT",
				lastDay : "[eilen] [klo] LT",
				lastWeek : "[viime] dddd[na] [klo] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s p??st?",
				past : "%s sitten",
				s : b,
				m : b,
				mm : b,
				h : b,
				hh : b,
				d : b,
				dd : b,
				M : b,
				MM : b,
				y : b,
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("fo", {
			months : "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
			monthsShort : "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
			weekdays : "sunnudagur_mánadagur_tysdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
			weekdaysShort : "sun_mán_tys_mik_hós_frí_ley".split("_"),
			weekdaysMin : "su_má_ty_mi_hó_fr_le".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D. MMMM, YYYY LT"
			},
			calendar : {
				sameDay : "[í dag kl.] LT",
				nextDay : "[í morgin kl.] LT",
				nextWeek : "dddd [kl.] LT",
				lastDay : "[í gjár kl.] LT",
				lastWeek : "[síestu] dddd [kl] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "um %s",
				past : "%s síeani",
				s : "fá sekund",
				m : "ein minutt",
				mm : "%d minuttir",
				h : "ein tími",
				hh : "%d tímar",
				d : "ein dagur",
				dd : "%d dagar",
				M : "ein mánaei",
				MM : "%d mánaeir",
				y : "eitt ár",
				yy : "%d ár"
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("fr-ca", {
			months : "janvier_février_mars_avril_mai_juin_juillet_ao?t_septembre_octobre_novembre_décembre".split("_"),
			monthsShort : "janv._févr._mars_avr._mai_juin_juil._ao?t_sept._oct._nov._déc.".split("_"),
			weekdays : "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
			weekdaysShort : "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
			weekdaysMin : "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "YYYY-MM-DD",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Aujourd'hui à] LT",
				nextDay : "[Demain à] LT",
				nextWeek : "dddd [à] LT",
				lastDay : "[Hier à] LT",
				lastWeek : "dddd [dernier à] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "dans %s",
				past : "il y a %s",
				s : "quelques secondes",
				m : "une minute",
				mm : "%d minutes",
				h : "une heure",
				hh : "%d heures",
				d : "un jour",
				dd : "%d jours",
				M : "un mois",
				MM : "%d mois",
				y : "un an",
				yy : "%d ans"
			},
			ordinal : function (a) {
				return a + (1 === a ? "er" : "")
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("fr", {
			months : "janvier_février_mars_avril_mai_juin_juillet_ao?t_septembre_octobre_novembre_décembre".split("_"),
			monthsShort : "janv._févr._mars_avr._mai_juin_juil._ao?t_sept._oct._nov._déc.".split("_"),
			weekdays : "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
			weekdaysShort : "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
			weekdaysMin : "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Aujourd'hui à] LT",
				nextDay : "[Demain à] LT",
				nextWeek : "dddd [à] LT",
				lastDay : "[Hier à] LT",
				lastWeek : "dddd [dernier à] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "dans %s",
				past : "il y a %s",
				s : "quelques secondes",
				m : "une minute",
				mm : "%d minutes",
				h : "une heure",
				hh : "%d heures",
				d : "un jour",
				dd : "%d jours",
				M : "un mois",
				MM : "%d mois",
				y : "un an",
				yy : "%d ans"
			},
			ordinal : function (a) {
				return a + (1 === a ? "er" : "")
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("gl", {
			months : "Xaneiro_Febreiro_Marzo_Abril_Maio_Xu?o_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro".split("_"),
			monthsShort : "Xan._Feb._Mar._Abr._Mai._Xu?._Xul._Ago._Set._Out._Nov._Dec.".split("_"),
			weekdays : "Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado".split("_"),
			weekdaysShort : "Dom._Lun._Mar._Mér._Xov._Ven._Sáb.".split("_"),
			weekdaysMin : "Do_Lu_Ma_Mé_Xo_Ve_Sá".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : function () {
					return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT"
				},
				nextDay : function () {
					return "[ma?á " + (1 !== this.hours() ? "ás" : "á") + "] LT"
				},
				nextWeek : function () {
					return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT"
				},
				lastDay : function () {
					return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT"
				},
				lastWeek : function () {
					return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT"
				},
				sameElse : "L"
			},
			relativeTime : {
				future : function (a) {
					return "uns segundos" === a ? "nuns segundos" : "en " + a
				},
				past : "hai %s",
				s : "uns segundos",
				m : "un minuto",
				mm : "%d minutos",
				h : "unha hora",
				hh : "%d horas",
				d : "un día",
				dd : "%d días",
				M : "un mes",
				MM : "%d meses",
				y : "un ano",
				yy : "%d anos"
			},
			ordinal : "%do",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("he", {
			months : "?????_??????_???_?????_???_????_????_??????_??????_???????_??????_?????".split("_"),
			monthsShort : "????_????_???_????_???_????_????_????_????_????_????_????".split("_"),
			weekdays : "?????_???_?????_?????_?????_????_???".split("_"),
			weekdaysShort : "??_??_??_??_??_??_??".split("_"),
			weekdaysMin : "?_?_?_?_?_?_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D [?]MMMM YYYY",
				LLL : "D [?]MMMM YYYY LT",
				LLLL : "dddd, D [?]MMMM YYYY LT",
				l : "D/M/YYYY",
				ll : "D MMM YYYY",
				lll : "D MMM YYYY LT",
				llll : "ddd, D MMM YYYY LT"
			},
			calendar : {
				sameDay : "[???? ??]LT",
				nextDay : "[??? ??]LT",
				nextWeek : "dddd [????] LT",
				lastDay : "[????? ??]LT",
				lastWeek : "[????] dddd [?????? ????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "???? %s",
				past : "???? %s",
				s : "???? ?????",
				m : "???",
				mm : "%d ????",
				h : "???",
				hh : function (a) {
					return 2 === a ? "??????" : a + " ????"
				},
				d : "???",
				dd : function (a) {
					return 2 === a ? "??????" : a + " ????"
				},
				M : "????",
				MM : function (a) {
					return 2 === a ? "???????" : a + " ??????"
				},
				y : "???",
				yy : function (a) {
					return 2 === a ? "??????" : a + " ????"
				}
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("hi", {
			months : "?????_??????_?????_??????_??_???_?????_?????_???????_???????_??????_???????".split("_"),
			monthsShort : "??._???._?????_?????._??_???_???._??._???._?????._??._???.".split("_"),
			weekdays : "??????_??????_???????_??????_???????_????????_??????".split("_"),
			weekdaysShort : "???_???_????_???_????_?????_???".split("_"),
			weekdaysMin : "?_??_??_??_??_??_?".split("_"),
			longDateFormat : {
				LT : "A h:mm ???",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY, LT",
				LLLL : "dddd, D MMMM YYYY, LT"
			},
			calendar : {
				sameDay : "[??] LT",
				nextDay : "[??] LT",
				nextWeek : "dddd, LT",
				lastDay : "[??] LT",
				lastWeek : "[?????] dddd, LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ???",
				past : "%s ????",
				s : "??? ?? ????",
				m : "?? ????",
				mm : "%d ????",
				h : "?? ????",
				hh : "%d ????",
				d : "?? ???",
				dd : "%d ???",
				M : "?? ?????",
				MM : "%d ?????",
				y : "?? ????",
				yy : "%d ????"
			},
			preparse : function (a) {
				return a.replace(/[??????????]/g, function (a) {
					return c[a]
				})
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				})
			},
			meridiem : function (a) {
				return 4 > a ? "???" : 10 > a ? "????" : 17 > a ? "?????" : 20 > a ? "???" : "???"
			},
			week : {
				dow : 0,
				doy : 6
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = a + " ";
			switch (c) {
			case "m":
				return b ? "jedna minuta" : "jedne minute";
			case "mm":
				return d += 1 === a ? "minuta" : 2 === a || 3 === a || 4 === a ? "minute" : "minuta";
			case "h":
				return b ? "jedan sat" : "jednog sata";
			case "hh":
				return d += 1 === a ? "sat" : 2 === a || 3 === a || 4 === a ? "sata" : "sati";
			case "dd":
				return d += 1 === a ? "dan" : "dana";
			case "MM":
				return d += 1 === a ? "mjesec" : 2 === a || 3 === a || 4 === a ? "mjeseca" : "mjeseci";
			case "yy":
				return d += 1 === a ? "godina" : 2 === a || 3 === a || 4 === a ? "godine" : "godina"
			}
		}
		return a.lang("hr", {
			months : "sje?anj_velja?a_o?ujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_"),
			monthsShort : "sje._vel._o?u._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
			weekdays : "nedjelja_ponedjeljak_utorak_srijeda_?etvrtak_petak_subota".split("_"),
			weekdaysShort : "ned._pon._uto._sri._?et._pet._sub.".split("_"),
			weekdaysMin : "ne_po_ut_sr_?e_pe_su".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD. MM. YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[danas u] LT",
				nextDay : "[sutra u] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[u] [nedjelju] [u] LT";
					case 3:
						return "[u] [srijedu] [u] LT";
					case 6:
						return "[u] [subotu] [u] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[u] dddd [u] LT"
					}
				},
				lastDay : "[ju?er u] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
					case 3:
						return "[pro?lu] dddd [u] LT";
					case 6:
						return "[pro?le] [subote] [u] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[pro?li] dddd [u] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "za %s",
				past : "prije %s",
				s : "par sekundi",
				m : b,
				mm : b,
				h : b,
				hh : b,
				d : "dan",
				dd : b,
				M : "mjesec",
				MM : b,
				y : "godinu",
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c, d) {
			var e = a;
			switch (c) {
			case "s":
				return d || b ? "néhány másodperc" : "néhány másodperce";
			case "m":
				return "egy" + (d || b ? " perc" : " perce");
			case "mm":
				return e + (d || b ? " perc" : " perce");
			case "h":
				return "egy" + (d || b ? " óra" : " órája");
			case "hh":
				return e + (d || b ? " óra" : " órája");
			case "d":
				return "egy" + (d || b ? " nap" : " napja");
			case "dd":
				return e + (d || b ? " nap" : " napja");
			case "M":
				return "egy" + (d || b ? " hónap" : " hónapja");
			case "MM":
				return e + (d || b ? " hónap" : " hónapja");
			case "y":
				return "egy" + (d || b ? " év" : " éve");
			case "yy":
				return e + (d || b ? " év" : " éve")
			}
			return ""
		}
		function c(a) {
			return (a ? "" : "[múlt] ") + "[" + d[this.day()] + "] LT[-kor]"
		}
		var d = "vasárnap hétf?n kedden szerdán csüt?rt?k?n pénteken szombaton".split(" ");
		return a.lang("hu", {
			months : "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
			monthsShort : "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
			weekdays : "vasárnap_hétf?_kedd_szerda_csüt?rt?k_péntek_szombat".split("_"),
			weekdaysShort : "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
			weekdaysMin : "v_h_k_sze_cs_p_szo".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "YYYY.MM.DD.",
				LL : "YYYY. MMMM D.",
				LLL : "YYYY. MMMM D., LT",
				LLLL : "YYYY. MMMM D., dddd LT"
			},
			meridiem : function (a, b, c) {
				return 12 > a ? c === !0 ? "de" : "DE" : c === !0 ? "du" : "DU"
			},
			calendar : {
				sameDay : "[ma] LT[-kor]",
				nextDay : "[holnap] LT[-kor]",
				nextWeek : function () {
					return c.call(this, !0)
				},
				lastDay : "[tegnap] LT[-kor]",
				lastWeek : function () {
					return c.call(this, !1)
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "%s múlva",
				past : "%s",
				s : b,
				m : b,
				mm : b,
				h : b,
				hh : b,
				d : b,
				dd : b,
				M : b,
				MM : b,
				y : b,
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b) {
			var c = {
				nominative : "???????_???????_????_?????_?????_??????_??????_???????_?????????_?????????_????????_?????????".split("_"),
				accusative : "????????_????????_?????_??????_??????_???????_???????_????????_??????????_??????????_?????????_??????????".split("_")
			},
			d = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(b) ? "accusative" : "nominative";
			return c[d][a.month()]
		}
		function c(a) {
			var b = "???_???_???_???_???_???_???_???_???_???_???_???".split("_");
			return b[a.month()]
		}
		function d(a) {
			var b = "??????_??????????_?????????_??????????_?????????_??????_?????".split("_");
			return b[a.day()]
		}
		return a.lang("hy-am", {
			months : b,
			monthsShort : c,
			weekdays : d,
			weekdaysShort : "???_???_???_???_???_????_???".split("_"),
			weekdaysMin : "???_???_???_???_???_????_???".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY ?.",
				LLL : "D MMMM YYYY ?., LT",
				LLLL : "dddd, D MMMM YYYY ?., LT"
			},
			calendar : {
				sameDay : "[?????] LT",
				nextDay : "[????] LT",
				lastDay : "[????] LT",
				nextWeek : function () {
					return "dddd [??? ????] LT"
				},
				lastWeek : function () {
					return "[?????] dddd [??? ????] LT"
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ????",
				past : "%s ????",
				s : "?? ???? ????????",
				m : "????",
				mm : "%d ????",
				h : "???",
				hh : "%d ???",
				d : "??",
				dd : "%d ??",
				M : "????",
				MM : "%d ????",
				y : "????",
				yy : "%d ????"
			},
			meridiem : function (a) {
				return 4 > a ? "???????" : 12 > a ? "????????" : 17 > a ? "???????" : "????????"
			},
			ordinal : function (a, b) {
				switch (b) {
				case "DDD":
				case "w":
				case "W":
				case "DDDo":
					return 1 === a ? a + "-??" : a + "-??";
				default:
					return a
				}
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("id", {
			months : "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
			monthsShort : "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split("_"),
			weekdays : "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
			weekdaysShort : "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
			weekdaysMin : "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
			longDateFormat : {
				LT : "HH.mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY [pukul] LT",
				LLLL : "dddd, D MMMM YYYY [pukul] LT"
			},
			meridiem : function (a) {
				return 11 > a ? "pagi" : 15 > a ? "siang" : 19 > a ? "sore" : "malam"
			},
			calendar : {
				sameDay : "[Hari ini pukul] LT",
				nextDay : "[Besok pukul] LT",
				nextWeek : "dddd [pukul] LT",
				lastDay : "[Kemarin pukul] LT",
				lastWeek : "dddd [lalu pukul] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "dalam %s",
				past : "%s yang lalu",
				s : "beberapa detik",
				m : "semenit",
				mm : "%d menit",
				h : "sejam",
				hh : "%d jam",
				d : "sehari",
				dd : "%d hari",
				M : "sebulan",
				MM : "%d bulan",
				y : "setahun",
				yy : "%d tahun"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a) {
			return a % 100 === 11 ? !0 : a % 10 === 1 ? !1 : !0
		}
		function c(a, c, d, e) {
			var f = a + " ";
			switch (d) {
			case "s":
				return c || e ? "nokkrar sekúndur" : "nokkrum sekúndum";
			case "m":
				return c ? "mínúta" : "mínútu";
			case "mm":
				return b(a) ? f + (c || e ? "mínútur" : "mínútum") : c ? f + "mínúta" : f + "mínútu";
			case "hh":
				return b(a) ? f + (c || e ? "klukkustundir" : "klukkustundum") : f + "klukkustund";
			case "d":
				return c ? "dagur" : e ? "dag" : "degi";
			case "dd":
				return b(a) ? c ? f + "dagar" : f + (e ? "daga" : "d?gum") : c ? f + "dagur" : f + (e ? "dag" : "degi");
			case "M":
				return c ? "mánueur" : e ? "mánue" : "mánuei";
			case "MM":
				return b(a) ? c ? f + "mánueir" : f + (e ? "mánuei" : "mánueum") : c ? f + "mánueur" : f + (e ? "mánue" : "mánuei");
			case "y":
				return c || e ? "ár" : "ári";
			case "yy":
				return b(a) ? f + (c || e ? "ár" : "árum") : f + (c || e ? "ár" : "ári")
			}
		}
		return a.lang("is", {
			months : "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
			monthsShort : "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
			weekdays : "sunnudagur_mánudagur_triejudagur_mievikudagur_fimmtudagur_f?studagur_laugardagur".split("_"),
			weekdaysShort : "sun_mán_tri_mie_fim_f?s_lau".split("_"),
			weekdaysMin : "Su_Má_Tr_Mi_Fi_F?_La".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD/MM/YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY [kl.] LT",
				LLLL : "dddd, D. MMMM YYYY [kl.] LT"
			},
			calendar : {
				sameDay : "[í dag kl.] LT",
				nextDay : "[á morgun kl.] LT",
				nextWeek : "dddd [kl.] LT",
				lastDay : "[í g?r kl.] LT",
				lastWeek : "[síeasta] dddd [kl.] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "eftir %s",
				past : "fyrir %s síean",
				s : c,
				m : c,
				mm : c,
				h : "klukkustund",
				hh : c,
				d : c,
				dd : c,
				M : c,
				MM : c,
				y : c,
				yy : c
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("it", {
			months : "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
			monthsShort : "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
			weekdays : "Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato".split("_"),
			weekdaysShort : "Dom_Lun_Mar_Mer_Gio_Ven_Sab".split("_"),
			weekdaysMin : "D_L_Ma_Me_G_V_S".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Oggi alle] LT",
				nextDay : "[Domani alle] LT",
				nextWeek : "dddd [alle] LT",
				lastDay : "[Ieri alle] LT",
				lastWeek : "[lo scorso] dddd [alle] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : function (a) {
					return (/^[0-9].+$/.test(a) ? "tra" : "in") + " " + a
				},
				past : "%s fa",
				s : "alcuni secondi",
				m : "un minuto",
				mm : "%d minuti",
				h : "un'ora",
				hh : "%d ore",
				d : "un giorno",
				dd : "%d giorni",
				M : "un mese",
				MM : "%d mesi",
				y : "un anno",
				yy : "%d anni"
			},
			ordinal : "%do",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ja", {
			months : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
			monthsShort : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
			weekdays : "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
			weekdaysShort : "日_月_火_水_木_金_土".split("_"),
			weekdaysMin : "日_月_火_水_木_金_土".split("_"),
			longDateFormat : {
				LT : "Ah時m分",
				L : "YYYY/MM/DD",
				LL : "YYYY年M月D日",
				LLL : "YYYY年M月D日LT",
				LLLL : "YYYY年M月D日LT dddd"
			},
			meridiem : function (a) {
				return 12 > a ? "午前" : "午後"
			},
			calendar : {
				sameDay : "[今日] LT",
				nextDay : "[明日] LT",
				nextWeek : "[来週]dddd LT",
				lastDay : "[昨日] LT",
				lastWeek : "[前週]dddd LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s後",
				past : "%s前",
				s : "数秒",
				m : "1分",
				mm : "%d分",
				h : "1時間",
				hh : "%d時間",
				d : "1日",
				dd : "%d日",
				M : "1ヶ月",
				MM : "%dヶ月",
				y : "1年",
				yy : "%d年"
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b) {
			var c = {
				nominative : "???????_?????????_?????_??????_?????_??????_??????_???????_??????????_?????????_????????_?????????".split("_"),
				accusative : "???????_?????????_?????_???????_?????_??????_??????_???????_??????????_?????????_????????_?????????".split("_")
			},
			d = /D[oD] *MMMM?/.test(b) ? "accusative" : "nominative";
			return c[d][a.month()]
		}
		function c(a, b) {
			var c = {
				nominative : "?????_????????_?????????_?????????_?????????_?????????_??????".split("_"),
				accusative : "??????_????????_?????????_?????????_?????????_?????????_??????".split("_")
			},
			d = /(????|??????)/.test(b) ? "accusative" : "nominative";
			return c[d][a.day()]
		}
		return a.lang("ka", {
			months : b,
			monthsShort : "???_???_???_???_???_???_???_???_???_???_???_???".split("_"),
			weekdays : c,
			weekdaysShort : "???_???_???_???_???_???_???".split("_"),
			weekdaysMin : "??_??_??_??_??_??_??".split("_"),
			longDateFormat : {
				LT : "h:mm A",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[????] LT[-??]",
				nextDay : "[????] LT[-??]",
				lastDay : "[?????] LT[-??]",
				nextWeek : "[??????] dddd LT[-??]",
				lastWeek : "[????] dddd LT-??",
				sameElse : "L"
			},
			relativeTime : {
				future : function (a) {
					return /(????|????|?????|????)/.test(a) ? a.replace(/?$/, "??") : a + "??"
				},
				past : function (a) {
					return /(????|????|?????|???|???)/.test(a) ? a.replace(/(?|?)$/, "?? ???") : /????/.test(a) ? a.replace(/????$/, "???? ???") : void 0
				},
				s : "????????? ????",
				m : "????",
				mm : "%d ????",
				h : "?????",
				hh : "%d ?????",
				d : "???",
				dd : "%d ???",
				M : "???",
				MM : "%d ???",
				y : "????",
				yy : "%d ????"
			},
			ordinal : function (a) {
				return 0 === a ? a : 1 === a ? a + "-??" : 20 > a || 100 >= a && a % 20 === 0 || a % 100 === 0 ? "??-" + a : a + "-?"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("km", {
			months : "????_??????_????_????_????_??????_??????_????_?????_????_????????_????".split("_"),
			monthsShort : "????_??????_????_????_????_??????_??????_????_?????_????_????????_????".split("_"),
			weekdays : "???????_?????_??????_???_??????????_?????_????".split("_"),
			weekdaysShort : "???????_?????_??????_???_??????????_?????_????".split("_"),
			weekdaysMin : "???????_?????_??????_???_??????????_?????_????".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[?????? ????] LT",
				nextDay : "[????? ????] LT",
				nextWeek : "dddd [????] LT",
				lastDay : "[???????? ????] LT",
				lastWeek : "dddd [??????????] [????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s???",
				past : "%s???",
				s : "??????????????",
				m : "???????",
				mm : "%d ????",
				h : "???????",
				hh : "%d ????",
				d : "???????",
				dd : "%d ????",
				M : "?????",
				MM : "%d ??",
				y : "????????",
				yy : "%d ?????"
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ko", {
			months : "1?_2?_3?_4?_5?_6?_7?_8?_9?_10?_11?_12?".split("_"),
			monthsShort : "1?_2?_3?_4?_5?_6?_7?_8?_9?_10?_11?_12?".split("_"),
			weekdays : "???_???_???_???_???_???_???".split("_"),
			weekdaysShort : "?_?_?_?_?_?_?".split("_"),
			weekdaysMin : "?_?_?_?_?_?_?".split("_"),
			longDateFormat : {
				LT : "A h? mm?",
				L : "YYYY.MM.DD",
				LL : "YYYY? MMMM D?",
				LLL : "YYYY? MMMM D? LT",
				LLLL : "YYYY? MMMM D? dddd LT"
			},
			meridiem : function (a) {
				return 12 > a ? "??" : "??"
			},
			calendar : {
				sameDay : "?? LT",
				nextDay : "?? LT",
				nextWeek : "dddd LT",
				lastDay : "?? LT",
				lastWeek : "??? dddd LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ?",
				past : "%s ?",
				s : "??",
				ss : "%d?",
				m : "??",
				mm : "%d?",
				h : "???",
				hh : "%d??",
				d : "??",
				dd : "%d?",
				M : "??",
				MM : "%d?",
				y : "??",
				yy : "%d?"
			},
			ordinal : "%d?",
			meridiemParse : /(??|??)/,
			isPM : function (a) {
				return "??" === a
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = {
				m : ["eng Minutt", "enger Minutt"],
				h : ["eng Stonn", "enger Stonn"],
				d : ["een Dag", "engem Dag"],
				dd : [a + " Deeg", a + " Deeg"],
				M : ["ee Mount", "engem Mount"],
				MM : [a + " Méint", a + " Méint"],
				y : ["ee Joer", "engem Joer"],
				yy : [a + " Joer", a + " Joer"]
			};
			return b ? d[c][0] : d[c][1]
		}
		function c(a) {
			var b = a.substr(0, a.indexOf(" "));
			return g(b) ? "a " + a : "an " + a
		}
		function d(a) {
			var b = a.substr(0, a.indexOf(" "));
			return g(b) ? "viru " + a : "virun " + a
		}
		function e() {
			var a = this.format("d");
			return f(a) ? "[Leschte] dddd [um] LT" : "[Leschten] dddd [um] LT"
		}
		function f(a) {
			switch (a = parseInt(a, 10)) {
			case 0:
			case 1:
			case 3:
			case 5:
			case 6:
				return !0;
			default:
				return !1
			}
		}
		function g(a) {
			if (a = parseInt(a, 10), isNaN(a))
				return !1;
			if (0 > a)
				return !0;
			if (10 > a)
				return a >= 4 && 7 >= a ? !0 : !1;
			if (100 > a) {
				var b = a % 10,
				c = a / 10;
				return g(0 === b ? c : b)
			}
			if (1e4 > a) {
				for (; a >= 10; )
					a /= 10;
				return g(a)
			}
			return a /= 1e3,
			g(a)
		}
		return a.lang("lb", {
			months : "Januar_Februar_M?erz_Abr?ll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
			monthsShort : "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
			weekdays : "Sonndeg_Méindeg_D?nschdeg_M?ttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
			weekdaysShort : "So._Mé._D?._M?._Do._Fr._Sa.".split("_"),
			weekdaysMin : "So_Mé_D?_M?_Do_Fr_Sa".split("_"),
			longDateFormat : {
				LT : "H:mm [Auer]",
				L : "DD.MM.YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Haut um] LT",
				sameElse : "L",
				nextDay : "[Muer um] LT",
				nextWeek : "dddd [um] LT",
				lastDay : "[G?schter um] LT",
				lastWeek : e
			},
			relativeTime : {
				future : c,
				past : d,
				s : "e puer Sekonnen",
				m : b,
				mm : "%d Minutten",
				h : b,
				hh : "%d Stonnen",
				d : b,
				dd : b,
				M : b,
				MM : b,
				y : b,
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c, d) {
			return b ? "kelios sekund?s" : d ? "keli? sekund?i?" : "kelias sekundes"
		}
		function c(a, b, c, d) {
			return b ? e(c)[0] : d ? e(c)[1] : e(c)[2]
		}
		function d(a) {
			return a % 10 === 0 || a > 10 && 20 > a
		}
		function e(a) {
			return h[a].split("_")
		}
		function f(a, b, f, g) {
			var h = a + " ";
			return 1 === a ? h + c(a, b, f[0], g) : b ? h + (d(a) ? e(f)[1] : e(f)[0]) : g ? h + e(f)[1] : h + (d(a) ? e(f)[1] : e(f)[2])
		}
		function g(a, b) {
			var c = -1 === b.indexOf("dddd HH:mm"),
			d = i[a.day()];
			return c ? d : d.substring(0, d.length - 2) + "?"
		}
		var h = {
			m : "minut?_minut?s_minut?",
			mm : "minut?s_minu?i?_minutes",
			h : "valanda_valandos_valand?",
			hh : "valandos_valand?_valandas",
			d : "diena_dienos_dien?",
			dd : "dienos_dien?_dienas",
			M : "m?nuo_m?nesio_m?nes?",
			MM : "m?nesiai_m?nesi?_m?nesius",
			y : "metai_met?_metus",
			yy : "metai_met?_metus"
		},
		i = "sekmadienis_pirmadienis_antradienis_tre?iadienis_ketvirtadienis_penktadienis_?e?tadienis".split("_");
		return a.lang("lt", {
			months : "sausio_vasario_kovo_baland?io_gegu??s_bir??lio_liepos_rugpjū?io_rugs?jo_spalio_lapkri?io_gruod?io".split("_"),
			monthsShort : "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
			weekdays : g,
			weekdaysShort : "Sek_Pir_Ant_Tre_Ket_Pen_?e?".split("_"),
			weekdaysMin : "S_P_A_T_K_Pn_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "YYYY-MM-DD",
				LL : "YYYY [m.] MMMM D [d.]",
				LLL : "YYYY [m.] MMMM D [d.], LT [val.]",
				LLLL : "YYYY [m.] MMMM D [d.], dddd, LT [val.]",
				l : "YYYY-MM-DD",
				ll : "YYYY [m.] MMMM D [d.]",
				lll : "YYYY [m.] MMMM D [d.], LT [val.]",
				llll : "YYYY [m.] MMMM D [d.], ddd, LT [val.]"
			},
			calendar : {
				sameDay : "[?iandien] LT",
				nextDay : "[Rytoj] LT",
				nextWeek : "dddd LT",
				lastDay : "[Vakar] LT",
				lastWeek : "[Pra?jus?] dddd LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "po %s",
				past : "prie? %s",
				s : b,
				m : c,
				mm : f,
				h : c,
				hh : f,
				d : c,
				dd : f,
				M : c,
				MM : f,
				y : c,
				yy : f
			},
			ordinal : function (a) {
				return a + "-oji"
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = a.split("_");
			return c ? b % 10 === 1 && 11 !== b ? d[2] : d[3] : b % 10 === 1 && 11 !== b ? d[0] : d[1]
		}
		function c(a, c, e) {
			return a + " " + b(d[e], a, c)
		}
		var d = {
			mm : "minūti_minūtes_minūte_minūtes",
			hh : "stundu_stundas_stunda_stundas",
			dd : "dienu_dienas_diena_dienas",
			MM : "mēnesi_mēne?us_mēnesis_mēne?i",
			yy : "gadu_gadus_gads_gadi"
		};
		return a.lang("lv", {
			months : "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
			monthsShort : "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
			weekdays : "svētdiena_pirmdiena_otrdiena_tre?diena_ceturtdiena_piektdiena_sestdiena".split("_"),
			weekdaysShort : "Sv_P_O_T_C_Pk_S".split("_"),
			weekdaysMin : "Sv_P_O_T_C_Pk_S".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "YYYY. [gada] D. MMMM",
				LLL : "YYYY. [gada] D. MMMM, LT",
				LLLL : "YYYY. [gada] D. MMMM, dddd, LT"
			},
			calendar : {
				sameDay : "[?odien pulksten] LT",
				nextDay : "[Rīt pulksten] LT",
				nextWeek : "dddd [pulksten] LT",
				lastDay : "[Vakar pulksten] LT",
				lastWeek : "[Pagāju?ā] dddd [pulksten] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s vēlāk",
				past : "%s agrāk",
				s : "da?as sekundes",
				m : "minūti",
				mm : c,
				h : "stundu",
				hh : c,
				d : "dienu",
				dd : c,
				M : "mēnesi",
				MM : c,
				y : "gadu",
				yy : c
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("mk", {
			months : "?ануари_февруари_март_април_ма?_?уни_?ули_август_септември_октомври_ноември_декември".split("_"),
			monthsShort : "?ан_фев_мар_апр_ма?_?ун_?ул_авг_сеп_окт_ное_дек".split("_"),
			weekdays : "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
			weekdaysShort : "нед_пон_вто_сре_чет_пет_саб".split("_"),
			weekdaysMin : "нe_пo_вт_ср_че_пе_сa".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "D.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Денес во] LT",
				nextDay : "[Утре во] LT",
				nextWeek : "dddd [во] LT",
				lastDay : "[Вчера во] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
					case 3:
					case 6:
						return "[Во изминатата] dddd [во] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[Во изминатиот] dddd [во] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "после %s",
				past : "пред %s",
				s : "неколку секунди",
				m : "минута",
				mm : "%d минути",
				h : "час",
				hh : "%d часа",
				d : "ден",
				dd : "%d дена",
				M : "месец",
				MM : "%d месеци",
				y : "година",
				yy : "%d години"
			},
			ordinal : function (a) {
				var b = a % 10,
				c = a % 100;
				return 0 === a ? a + "-ев" : 0 === c ? a + "-ен" : c > 10 && 20 > c ? a + "-ти" : 1 === b ? a + "-ви" : 2 === b ? a + "-ри" : 7 === b || 8 === b ? a + "-ми" : a + "-ти"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ml", {
			months : "??????_?????????_???????_??????_????_???_????_????????_??????????_???????_?????_??????".split("_"),
			monthsShort : "???._??????._???._?????._????_???_????._??._???????._?????._???._????.".split("_"),
			weekdays : "????????_??????????_?????????_????????_?????????_???????????_????????".split("_"),
			weekdaysShort : "????_??????_?????_????_??????_??????_???".split("_"),
			weekdaysMin : "??_??_??_??_????_??_?".split("_"),
			longDateFormat : {
				LT : "A h:mm -??",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY, LT",
				LLLL : "dddd, D MMMM YYYY, LT"
			},
			calendar : {
				sameDay : "[?????] LT",
				nextDay : "[????] LT",
				nextWeek : "dddd, LT",
				lastDay : "[??????] LT",
				lastWeek : "[??????] dddd, LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ???????",
				past : "%s ?????",
				s : "??? ?????????",
				m : "??? ????????",
				mm : "%d ????????",
				h : "??? ????????",
				hh : "%d ????????",
				d : "??? ?????",
				dd : "%d ?????",
				M : "??? ????",
				MM : "%d ????",
				y : "??? ????",
				yy : "%d ????"
			},
			meridiem : function (a) {
				return 4 > a ? "??????" : 12 > a ? "??????" : 17 > a ? "???? ???????" : 20 > a ? "??????????" : "??????"
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("mr", {
			months : "????????_??????????_?????_??????_??_???_????_?????_????????_???????_?????????_???????".split("_"),
			monthsShort : "????._??????._?????._?????._??._???._????._??._??????._?????._???????._?????.".split("_"),
			weekdays : "??????_??????_???????_??????_???????_????????_??????".split("_"),
			weekdaysShort : "???_???_????_???_????_?????_???".split("_"),
			weekdaysMin : "?_??_??_??_??_??_?".split("_"),
			longDateFormat : {
				LT : "A h:mm ?????",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY, LT",
				LLLL : "dddd, D MMMM YYYY, LT"
			},
			calendar : {
				sameDay : "[??] LT",
				nextDay : "[?????] LT",
				nextWeek : "dddd, LT",
				lastDay : "[???] LT",
				lastWeek : "[?????] dddd, LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ????",
				past : "%s ??????",
				s : "?????",
				m : "?? ?????",
				mm : "%d ??????",
				h : "?? ???",
				hh : "%d ???",
				d : "?? ????",
				dd : "%d ????",
				M : "?? ?????",
				MM : "%d ?????",
				y : "?? ????",
				yy : "%d ?????"
			},
			preparse : function (a) {
				return a.replace(/[??????????]/g, function (a) {
					return c[a]
				})
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				})
			},
			meridiem : function (a) {
				return 4 > a ? "??????" : 10 > a ? "?????" : 17 > a ? "??????" : 20 > a ? "????????" : "??????"
			},
			week : {
				dow : 0,
				doy : 6
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ms-my", {
			months : "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
			monthsShort : "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
			weekdays : "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
			weekdaysShort : "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
			weekdaysMin : "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
			longDateFormat : {
				LT : "HH.mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY [pukul] LT",
				LLLL : "dddd, D MMMM YYYY [pukul] LT"
			},
			meridiem : function (a) {
				return 11 > a ? "pagi" : 15 > a ? "tengahari" : 19 > a ? "petang" : "malam"
			},
			calendar : {
				sameDay : "[Hari ini pukul] LT",
				nextDay : "[Esok pukul] LT",
				nextWeek : "dddd [pukul] LT",
				lastDay : "[Kelmarin pukul] LT",
				lastWeek : "dddd [lepas pukul] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "dalam %s",
				past : "%s yang lepas",
				s : "beberapa saat",
				m : "seminit",
				mm : "%d minit",
				h : "sejam",
				hh : "%d jam",
				d : "sehari",
				dd : "%d hari",
				M : "sebulan",
				MM : "%d bulan",
				y : "setahun",
				yy : "%d tahun"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("nb", {
			months : "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
			monthsShort : "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
			weekdays : "s?ndag_mandag_tirsdag_onsdag_torsdag_fredag_l?rdag".split("_"),
			weekdaysShort : "s?._ma._ti._on._to._fr._l?.".split("_"),
			weekdaysMin : "s?_ma_ti_on_to_fr_l?".split("_"),
			longDateFormat : {
				LT : "H.mm",
				L : "DD.MM.YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY [kl.] LT",
				LLLL : "dddd D. MMMM YYYY [kl.] LT"
			},
			calendar : {
				sameDay : "[i dag kl.] LT",
				nextDay : "[i morgen kl.] LT",
				nextWeek : "dddd [kl.] LT",
				lastDay : "[i g?r kl.] LT",
				lastWeek : "[forrige] dddd [kl.] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "om %s",
				past : "for %s siden",
				s : "noen sekunder",
				m : "ett minutt",
				mm : "%d minutter",
				h : "en time",
				hh : "%d timer",
				d : "en dag",
				dd : "%d dager",
				M : "en m?ned",
				MM : "%d m?neder",
				y : "ett ?r",
				yy : "%d ?r"
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "?",
			2 : "?",
			3 : "?",
			4 : "?",
			5 : "?",
			6 : "?",
			7 : "?",
			8 : "?",
			9 : "?",
			0 : "?"
		},
		c = {
			"?" : "1",
			"?" : "2",
			"?" : "3",
			"?" : "4",
			"?" : "5",
			"?" : "6",
			"?" : "7",
			"?" : "8",
			"?" : "9",
			"?" : "0"
		};
		return a.lang("ne", {
			months : "?????_?????????_?????_??????_??_???_?????_?????_??????????_???????_????????_????????".split("_"),
			monthsShort : "??._??????._?????_?????._??_???_?????._??._?????._?????._????._????.".split("_"),
			weekdays : "??????_??????_????????_??????_???????_????????_??????".split("_"),
			weekdaysShort : "???._???._?????._???._????._?????._???.".split("_"),
			weekdaysMin : "??._??._???_??._??._??._?.".split("_"),
			longDateFormat : {
				LT : "A?? h:mm ???",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY, LT",
				LLLL : "dddd, D MMMM YYYY, LT"
			},
			preparse : function (a) {
				return a.replace(/[??????????]/g, function (a) {
					return c[a]
				})
			},
			postformat : function (a) {
				return a.replace(/\d/g, function (a) {
					return b[a]
				})
			},
			meridiem : function (a) {
				return 3 > a ? "????" : 10 > a ? "?????" : 15 > a ? "??????" : 18 > a ? "??????" : 20 > a ? "????" : "????"
			},
			calendar : {
				sameDay : "[??] LT",
				nextDay : "[????] LT",
				nextWeek : "[?????] dddd[,] LT",
				lastDay : "[????] LT",
				lastWeek : "[????] dddd[,] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s??",
				past : "%s ?????",
				s : "???? ???",
				m : "?? ?????",
				mm : "%d ?????",
				h : "?? ?????",
				hh : "%d ?????",
				d : "?? ???",
				dd : "%d ???",
				M : "?? ?????",
				MM : "%d ?????",
				y : "?? ????",
				yy : "%d ????"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),
		c = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_");
		return a.lang("nl", {
			months : "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
			monthsShort : function (a, d) {
				return /-MMM-/.test(d) ? c[a.month()] : b[a.month()]
			},
			weekdays : "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
			weekdaysShort : "zo._ma._di._wo._do._vr._za.".split("_"),
			weekdaysMin : "Zo_Ma_Di_Wo_Do_Vr_Za".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD-MM-YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[vandaag om] LT",
				nextDay : "[morgen om] LT",
				nextWeek : "dddd [om] LT",
				lastDay : "[gisteren om] LT",
				lastWeek : "[afgelopen] dddd [om] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "over %s",
				past : "%s geleden",
				s : "een paar seconden",
				m : "één minuut",
				mm : "%d minuten",
				h : "één uur",
				hh : "%d uur",
				d : "één dag",
				dd : "%d dagen",
				M : "één maand",
				MM : "%d maanden",
				y : "één jaar",
				yy : "%d jaar"
			},
			ordinal : function (a) {
				return a + (1 === a || 8 === a || a >= 20 ? "ste" : "de")
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("nn", {
			months : "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
			monthsShort : "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
			weekdays : "sundag_m?ndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
			weekdaysShort : "sun_m?n_tys_ons_tor_fre_lau".split("_"),
			weekdaysMin : "su_m?_ty_on_to_fr_l?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[I dag klokka] LT",
				nextDay : "[I morgon klokka] LT",
				nextWeek : "dddd [klokka] LT",
				lastDay : "[I g?r klokka] LT",
				lastWeek : "[F?reg?ande] dddd [klokka] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "om %s",
				past : "for %s sidan",
				s : "nokre sekund",
				m : "eit minutt",
				mm : "%d minutt",
				h : "ein time",
				hh : "%d timar",
				d : "ein dag",
				dd : "%d dagar",
				M : "ein m?nad",
				MM : "%d m?nader",
				y : "eit ?r",
				yy : "%d ?r"
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a) {
			return 5 > a % 10 && a % 10 > 1 && ~~(a / 10) % 10 !== 1
		}
		function c(a, c, d) {
			var e = a + " ";
			switch (d) {
			case "m":
				return c ? "minuta" : "minut?";
			case "mm":
				return e + (b(a) ? "minuty" : "minut");
			case "h":
				return c ? "godzina" : "godzin?";
			case "hh":
				return e + (b(a) ? "godziny" : "godzin");
			case "MM":
				return e + (b(a) ? "miesi?ce" : "miesi?cy");
			case "yy":
				return e + (b(a) ? "lata" : "lat")
			}
		}
		var d = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_pa?dziernik_listopad_grudzień".split("_"),
		e = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrze?nia_pa?dziernika_listopada_grudnia".split("_");
		return a.lang("pl", {
			months : function (a, b) {
				return /D MMMM/.test(b) ? e[a.month()] : d[a.month()]
			},
			monthsShort : "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_pa?_lis_gru".split("_"),
			weekdays : "niedziela_poniedzia?ek_wtorek_?roda_czwartek_pi?tek_sobota".split("_"),
			weekdaysShort : "nie_pon_wt_?r_czw_pt_sb".split("_"),
			weekdaysMin : "N_Pn_Wt_?r_Cz_Pt_So".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Dzi? o] LT",
				nextDay : "[Jutro o] LT",
				nextWeek : "[W] dddd [o] LT",
				lastDay : "[Wczoraj o] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
						return "[W zesz?? niedziel? o] LT";
					case 3:
						return "[W zesz?? ?rod? o] LT";
					case 6:
						return "[W zesz?? sobot? o] LT";
					default:
						return "[W zesz?y] dddd [o] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "za %s",
				past : "%s temu",
				s : "kilka sekund",
				m : c,
				mm : c,
				h : c,
				hh : c,
				d : "1 dzień",
				dd : "%d dni",
				M : "miesi?c",
				MM : c,
				y : "rok",
				yy : c
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("pt-br", {
			months : "janeiro_fevereiro_mar?o_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
			monthsShort : "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
			weekdays : "domingo_segunda-feira_ter?a-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),
			weekdaysShort : "dom_seg_ter_qua_qui_sex_sáb".split("_"),
			weekdaysMin : "dom_2a_3a_4a_5a_6a_sáb".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D [de] MMMM [de] YYYY",
				LLL : "D [de] MMMM [de] YYYY [às] LT",
				LLLL : "dddd, D [de] MMMM [de] YYYY [às] LT"
			},
			calendar : {
				sameDay : "[Hoje às] LT",
				nextDay : "[Amanh? às] LT",
				nextWeek : "dddd [às] LT",
				lastDay : "[Ontem às] LT",
				lastWeek : function () {
					return 0 === this.day() || 6 === this.day() ? "[último] dddd [às] LT" : "[última] dddd [às] LT"
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "em %s",
				past : "%s atrás",
				s : "segundos",
				m : "um minuto",
				mm : "%d minutos",
				h : "uma hora",
				hh : "%d horas",
				d : "um dia",
				dd : "%d dias",
				M : "um mês",
				MM : "%d meses",
				y : "um ano",
				yy : "%d anos"
			},
			ordinal : "%do"
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("pt", {
			months : "janeiro_fevereiro_mar?o_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
			monthsShort : "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
			weekdays : "domingo_segunda-feira_ter?a-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),
			weekdaysShort : "dom_seg_ter_qua_qui_sex_sáb".split("_"),
			weekdaysMin : "dom_2a_3a_4a_5a_6a_sáb".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D [de] MMMM [de] YYYY",
				LLL : "D [de] MMMM [de] YYYY LT",
				LLLL : "dddd, D [de] MMMM [de] YYYY LT"
			},
			calendar : {
				sameDay : "[Hoje às] LT",
				nextDay : "[Amanh? às] LT",
				nextWeek : "dddd [às] LT",
				lastDay : "[Ontem às] LT",
				lastWeek : function () {
					return 0 === this.day() || 6 === this.day() ? "[último] dddd [às] LT" : "[última] dddd [às] LT"
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "em %s",
				past : "há %s",
				s : "segundos",
				m : "um minuto",
				mm : "%d minutos",
				h : "uma hora",
				hh : "%d horas",
				d : "um dia",
				dd : "%d dias",
				M : "um mês",
				MM : "%d meses",
				y : "um ano",
				yy : "%d anos"
			},
			ordinal : "%do",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = {
				mm : "minute",
				hh : "ore",
				dd : "zile",
				MM : "luni",
				yy : "ani"
			},
			e = " ";
			return (a % 100 >= 20 || a >= 100 && a % 100 === 0) && (e = " de "),
			a + e + d[c]
		}
		return a.lang("ro", {
			months : "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
			monthsShort : "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
			weekdays : "duminic?_luni_mar?i_miercuri_joi_vineri_samb?t?".split("_"),
			weekdaysShort : "Dum_Lun_Mar_Mie_Joi_Vin_Sam".split("_"),
			weekdaysMin : "Du_Lu_Ma_Mi_Jo_Vi_Sa".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY H:mm",
				LLLL : "dddd, D MMMM YYYY H:mm"
			},
			calendar : {
				sameDay : "[azi la] LT",
				nextDay : "[maine la] LT",
				nextWeek : "dddd [la] LT",
				lastDay : "[ieri la] LT",
				lastWeek : "[fosta] dddd [la] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "peste %s",
				past : "%s ?n urm?",
				s : "cateva secunde",
				m : "un minut",
				mm : b,
				h : "o or?",
				hh : b,
				d : "o zi",
				dd : b,
				M : "o lun?",
				MM : b,
				y : "un an",
				yy : b
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b) {
			var c = a.split("_");
			return b % 10 === 1 && b % 100 !== 11 ? c[0] : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? c[1] : c[2]
		}
		function c(a, c, d) {
			var e = {
				mm : c ? "минута_минуты_минут" : "минуту_минуты_минут",
				hh : "час_часа_часов",
				dd : "день_дня_дней",
				MM : "месяц_месяца_месяцев",
				yy : "год_года_лет"
			};
			return "m" === d ? c ? "минута" : "минуту" : a + " " + b(e[d], +a)
		}
		function d(a, b) {
			var c = {
				nominative : "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
				accusative : "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_")
			},
			d = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(b) ? "accusative" : "nominative";
			return c[d][a.month()]
		}
		function e(a, b) {
			var c = {
				nominative : "янв_фев_мар_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
				accusative : "янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек".split("_")
			},
			d = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(b) ? "accusative" : "nominative";
			return c[d][a.month()]
		}
		function f(a, b) {
			var c = {
				nominative : "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),
				accusative : "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_")
			},
			d = /\[ ?[Вв] ?(?:прошлую|следующую)? ?\] ?dddd/.test(b) ? "accusative" : "nominative";
			return c[d][a.day()]
		}
		return a.lang("ru", {
			months : d,
			monthsShort : e,
			weekdays : f,
			weekdaysShort : "вс_пн_вт_ср_чт_пт_сб".split("_"),
			weekdaysMin : "вс_пн_вт_ср_чт_пт_сб".split("_"),
			monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY г.",
				LLL : "D MMMM YYYY г., LT",
				LLLL : "dddd, D MMMM YYYY г., LT"
			},
			calendar : {
				sameDay : "[Сегодня в] LT",
				nextDay : "[Завтра в] LT",
				lastDay : "[Вчера в] LT",
				nextWeek : function () {
					return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT"
				},
				lastWeek : function () {
					switch (this.day()) {
					case 0:
						return "[В прошлое] dddd [в] LT";
					case 1:
					case 2:
					case 4:
						return "[В прошлый] dddd [в] LT";
					case 3:
					case 5:
					case 6:
						return "[В прошлую] dddd [в] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "через %s",
				past : "%s назад",
				s : "несколько секунд",
				m : c,
				mm : c,
				h : "час",
				hh : c,
				d : "день",
				dd : c,
				M : "месяц",
				MM : c,
				y : "год",
				yy : c
			},
			meridiemParse : /ночи|утра|дня|вечера/i,
			isPM : function (a) {
				return /^(дня|вечера)$/.test(a)
			},
			meridiem : function (a) {
				return 4 > a ? "ночи" : 12 > a ? "утра" : 17 > a ? "дня" : "вечера"
			},
			ordinal : function (a, b) {
				switch (b) {
				case "M":
				case "d":
				case "DDD":
					return a + "-й";
				case "D":
					return a + "-го";
				case "w":
				case "W":
					return a + "-я";
				default:
					return a
				}
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a) {
			return a > 1 && 5 > a
		}
		function c(a, c, d, e) {
			var f = a + " ";
			switch (d) {
			case "s":
				return c || e ? "pár sekúnd" : "pár sekundami";
			case "m":
				return c ? "minúta" : e ? "minútu" : "minútou";
			case "mm":
				return c || e ? f + (b(a) ? "minúty" : "minút") : f + "minútami";
				break;
			case "h":
				return c ? "hodina" : e ? "hodinu" : "hodinou";
			case "hh":
				return c || e ? f + (b(a) ? "hodiny" : "hodín") : f + "hodinami";
				break;
			case "d":
				return c || e ? "deň" : "dňom";
			case "dd":
				return c || e ? f + (b(a) ? "dni" : "dní") : f + "dňami";
				break;
			case "M":
				return c || e ? "mesiac" : "mesiacom";
			case "MM":
				return c || e ? f + (b(a) ? "mesiace" : "mesiacov") : f + "mesiacmi";
				break;
			case "y":
				return c || e ? "rok" : "rokom";
			case "yy":
				return c || e ? f + (b(a) ? "roky" : "rokov") : f + "rokmi"
			}
		}
		var d = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"),
		e = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");
		return a.lang("sk", {
			months : d,
			monthsShort : e,
			monthsParse : function (a, b) {
				var c,
				d = [];
				for (c = 0; 12 > c; c++)
					d[c] = new RegExp("^" + a[c] + "$|^" + b[c] + "$", "i");
				return d
			}
			(d, e),
			weekdays : "nede?a_pondelok_utorok_streda_?tvrtok_piatok_sobota".split("_"),
			weekdaysShort : "ne_po_ut_st_?t_pi_so".split("_"),
			weekdaysMin : "ne_po_ut_st_?t_pi_so".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD.MM.YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[dnes o] LT",
				nextDay : "[zajtra o] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[v nede?u o] LT";
					case 1:
					case 2:
						return "[v] dddd [o] LT";
					case 3:
						return "[v stredu o] LT";
					case 4:
						return "[vo ?tvrtok o] LT";
					case 5:
						return "[v piatok o] LT";
					case 6:
						return "[v sobotu o] LT"
					}
				},
				lastDay : "[v?era o] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
						return "[minulú nede?u o] LT";
					case 1:
					case 2:
						return "[minuly] dddd [o] LT";
					case 3:
						return "[minulú stredu o] LT";
					case 4:
					case 5:
						return "[minuly] dddd [o] LT";
					case 6:
						return "[minulú sobotu o] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "za %s",
				past : "pred %s",
				s : c,
				m : c,
				mm : c,
				h : c,
				hh : c,
				d : c,
				dd : c,
				M : c,
				MM : c,
				y : c,
				yy : c
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b, c) {
			var d = a + " ";
			switch (c) {
			case "m":
				return b ? "ena minuta" : "eno minuto";
			case "mm":
				return d += 1 === a ? "minuta" : 2 === a ? "minuti" : 3 === a || 4 === a ? "minute" : "minut";
			case "h":
				return b ? "ena ura" : "eno uro";
			case "hh":
				return d += 1 === a ? "ura" : 2 === a ? "uri" : 3 === a || 4 === a ? "ure" : "ur";
			case "dd":
				return d += 1 === a ? "dan" : "dni";
			case "MM":
				return d += 1 === a ? "mesec" : 2 === a ? "meseca" : 3 === a || 4 === a ? "mesece" : "mesecev";
			case "yy":
				return d += 1 === a ? "leto" : 2 === a ? "leti" : 3 === a || 4 === a ? "leta" : "let"
			}
		}
		return a.lang("sl", {
			months : "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
			monthsShort : "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
			weekdays : "nedelja_ponedeljek_torek_sreda_?etrtek_petek_sobota".split("_"),
			weekdaysShort : "ned._pon._tor._sre._?et._pet._sob.".split("_"),
			weekdaysMin : "ne_po_to_sr_?e_pe_so".split("_"),
			longDateFormat : {
				LT : "H:mm",
				L : "DD. MM. YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[danes ob] LT",
				nextDay : "[jutri ob] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[v] [nedeljo] [ob] LT";
					case 3:
						return "[v] [sredo] [ob] LT";
					case 6:
						return "[v] [soboto] [ob] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[v] dddd [ob] LT"
					}
				},
				lastDay : "[v?eraj ob] LT",
				lastWeek : function () {
					switch (this.day()) {
					case 0:
					case 3:
					case 6:
						return "[prej?nja] dddd [ob] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[prej?nji] dddd [ob] LT"
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "?ez %s",
				past : "%s nazaj",
				s : "nekaj sekund",
				m : b,
				mm : b,
				h : b,
				hh : b,
				d : "en dan",
				dd : b,
				M : "en mesec",
				MM : b,
				y : "eno leto",
				yy : b
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("sq", {
			months : "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_N?ntor_Dhjetor".split("_"),
			monthsShort : "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_N?n_Dhj".split("_"),
			weekdays : "E Diel_E H?n?_E Mart?_E M?rkur?_E Enjte_E Premte_E Shtun?".split("_"),
			weekdaysShort : "Die_H?n_Mar_M?r_Enj_Pre_Sht".split("_"),
			weekdaysMin : "D_H_Ma_M?_E_P_Sh".split("_"),
			meridiem : function (a) {
				return 12 > a ? "PD" : "MD"
			},
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Sot n?] LT",
				nextDay : "[Nes?r n?] LT",
				nextWeek : "dddd [n?] LT",
				lastDay : "[Dje n?] LT",
				lastWeek : "dddd [e kaluar n?] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "n? %s",
				past : "%s m? par?",
				s : "disa sekonda",
				m : "nj? minut?",
				mm : "%d minuta",
				h : "nj? or?",
				hh : "%d or?",
				d : "nj? dit?",
				dd : "%d dit?",
				M : "nj? muaj",
				MM : "%d muaj",
				y : "nj? vit",
				yy : "%d vite"
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			words : {
				m : ["?едан минут", "?едне минуте"],
				mm : ["минут", "минуте", "минута"],
				h : ["?едан сат", "?едног сата"],
				hh : ["сат", "сата", "сати"],
				dd : ["дан", "дана", "дана"],
				MM : ["месец", "месеца", "месеци"],
				yy : ["година", "године", "година"]
			},
			correctGrammaticalCase : function (a, b) {
				return 1 === a ? b[0] : a >= 2 && 4 >= a ? b[1] : b[2]
			},
			translate : function (a, c, d) {
				var e = b.words[d];
				return 1 === d.length ? c ? e[0] : e[1] : a + " " + b.correctGrammaticalCase(a, e)
			}
		};
		return a.lang("sr-cyrl", {
			months : ["?ануар", "фебруар", "март", "април", "ма?", "?ун", "?ул", "август", "септембар", "октобар", "новембар", "децембар"],
			monthsShort : ["?ан.", "феб.", "мар.", "апр.", "ма?", "?ун", "?ул", "авг.", "сеп.", "окт.", "нов.", "дец."],
			weekdays : ["неде?а", "понеде?ак", "уторак", "среда", "четвртак", "петак", "субота"],
			weekdaysShort : ["нед.", "пон.", "уто.", "сре.", "чет.", "пет.", "суб."],
			weekdaysMin : ["не", "по", "ут", "ср", "че", "пе", "су"],
			longDateFormat : {
				LT : "H:mm",
				L : "DD. MM. YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[данас у] LT",
				nextDay : "[сутра у] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[у] [неде?у] [у] LT";
					case 3:
						return "[у] [среду] [у] LT";
					case 6:
						return "[у] [суботу] [у] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[у] dddd [у] LT"
					}
				},
				lastDay : "[?уче у] LT",
				lastWeek : function () {
					var a = ["[прошле] [неде?е] [у] LT", "[прошлог] [понеде?ка] [у] LT", "[прошлог] [уторка] [у] LT", "[прошле] [среде] [у] LT", "[прошлог] [четвртка] [у] LT", "[прошлог] [петка] [у] LT", "[прошле] [суботе] [у] LT"];
					return a[this.day()]
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "за %s",
				past : "пре %s",
				s : "неколико секунди",
				m : b.translate,
				mm : b.translate,
				h : b.translate,
				hh : b.translate,
				d : "дан",
				dd : b.translate,
				M : "месец",
				MM : b.translate,
				y : "годину",
				yy : b.translate
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			words : {
				m : ["jedan minut", "jedne minute"],
				mm : ["minut", "minute", "minuta"],
				h : ["jedan sat", "jednog sata"],
				hh : ["sat", "sata", "sati"],
				dd : ["dan", "dana", "dana"],
				MM : ["mesec", "meseca", "meseci"],
				yy : ["godina", "godine", "godina"]
			},
			correctGrammaticalCase : function (a, b) {
				return 1 === a ? b[0] : a >= 2 && 4 >= a ? b[1] : b[2]
			},
			translate : function (a, c, d) {
				var e = b.words[d];
				return 1 === d.length ? c ? e[0] : e[1] : a + " " + b.correctGrammaticalCase(a, e)
			}
		};
		return a.lang("sr", {
			months : ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"],
			monthsShort : ["jan.", "feb.", "mar.", "apr.", "maj", "jun", "jul", "avg.", "sep.", "okt.", "nov.", "dec."],
			weekdays : ["nedelja", "ponedeljak", "utorak", "sreda", "?etvrtak", "petak", "subota"],
			weekdaysShort : ["ned.", "pon.", "uto.", "sre.", "?et.", "pet.", "sub."],
			weekdaysMin : ["ne", "po", "ut", "sr", "?e", "pe", "su"],
			longDateFormat : {
				LT : "H:mm",
				L : "DD. MM. YYYY",
				LL : "D. MMMM YYYY",
				LLL : "D. MMMM YYYY LT",
				LLLL : "dddd, D. MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[danas u] LT",
				nextDay : "[sutra u] LT",
				nextWeek : function () {
					switch (this.day()) {
					case 0:
						return "[u] [nedelju] [u] LT";
					case 3:
						return "[u] [sredu] [u] LT";
					case 6:
						return "[u] [subotu] [u] LT";
					case 1:
					case 2:
					case 4:
					case 5:
						return "[u] dddd [u] LT"
					}
				},
				lastDay : "[ju?e u] LT",
				lastWeek : function () {
					var a = ["[pro?le] [nedelje] [u] LT", "[pro?log] [ponedeljka] [u] LT", "[pro?log] [utorka] [u] LT", "[pro?le] [srede] [u] LT", "[pro?log] [?etvrtka] [u] LT", "[pro?log] [petka] [u] LT", "[pro?le] [subote] [u] LT"];
					return a[this.day()]
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "za %s",
				past : "pre %s",
				s : "nekoliko sekundi",
				m : b.translate,
				mm : b.translate,
				h : b.translate,
				hh : b.translate,
				d : "dan",
				dd : b.translate,
				M : "mesec",
				MM : b.translate,
				y : "godinu",
				yy : b.translate
			},
			ordinal : "%d.",
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("sv", {
			months : "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
			monthsShort : "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
			weekdays : "s?ndag_m?ndag_tisdag_onsdag_torsdag_fredag_l?rdag".split("_"),
			weekdaysShort : "s?n_m?n_tis_ons_tor_fre_l?r".split("_"),
			weekdaysMin : "s?_m?_ti_on_to_fr_l?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "YYYY-MM-DD",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[Idag] LT",
				nextDay : "[Imorgon] LT",
				lastDay : "[Ig?r] LT",
				nextWeek : "dddd LT",
				lastWeek : "[F?rra] dddd[en] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "om %s",
				past : "f?r %s sedan",
				s : "n?gra sekunder",
				m : "en minut",
				mm : "%d minuter",
				h : "en timme",
				hh : "%d timmar",
				d : "en dag",
				dd : "%d dagar",
				M : "en m?nad",
				MM : "%d m?nader",
				y : "ett ?r",
				yy : "%d ?r"
			},
			ordinal : function (a) {
				var b = a % 10,
				c = 1 === ~~(a % 100 / 10) ? "e" : 1 === b ? "a" : 2 === b ? "a" : 3 === b ? "e" : "e";
				return a + c
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("ta", {
			months : "?????_????????_??????_??????_??_????_????_??????_???????????_?????????_???????_????????".split("_"),
			monthsShort : "?????_????????_??????_??????_??_????_????_??????_???????????_?????????_???????_????????".split("_"),
			weekdays : "???????????????_????????????_?????????????_??????????_????????????_?????????????_??????????".split("_"),
			weekdaysShort : "??????_???????_????????_?????_???????_??????_???".split("_"),
			weekdaysMin : "??_??_??_??_??_??_?".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY, LT",
				LLLL : "dddd, D MMMM YYYY, LT"
			},
			calendar : {
				sameDay : "[?????] LT",
				nextDay : "[????] LT",
				nextWeek : "dddd, LT",
				lastDay : "[??????] LT",
				lastWeek : "[????? ?????] dddd, LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s ???",
				past : "%s ????",
				s : "??? ??? ?????????",
				m : "??? ???????",
				mm : "%d ??????????",
				h : "??? ??? ?????",
				hh : "%d ??? ?????",
				d : "??? ????",
				dd : "%d ???????",
				M : "??? ?????",
				MM : "%d ????????",
				y : "??? ??????",
				yy : "%d ????????"
			},
			ordinal : function (a) {
				return a + "???"
			},
			meridiem : function (a) {
				return a >= 6 && 10 >= a ? " ????" : a >= 10 && 14 >= a ? " ???????" : a >= 14 && 18 >= a ? " ???????" : a >= 18 && 20 >= a ? " ????" : a >= 20 && 24 >= a ? " ????" : a >= 0 && 6 >= a ? " ?????" : void 0
			},
			week : {
				dow : 0,
				doy : 6
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("th", {
			months : "??????_??????????_??????_??????_???????_????????_???????_???????_???????_??????_?????????_???????".split("_"),
			monthsShort : "????_?????_????_????_?????_??????_?????_?????_?????_????_???????_?????".split("_"),
			weekdays : "???????_??????_??????_???_????????_?????_?????".split("_"),
			weekdaysShort : "???????_??????_??????_???_?????_?????_?????".split("_"),
			weekdaysMin : "??._?._?._?._??._?._?.".split("_"),
			longDateFormat : {
				LT : "H ?????? m ????",
				L : "YYYY/MM/DD",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY ???? LT",
				LLLL : "???dddd??? D MMMM YYYY ???? LT"
			},
			meridiem : function (a) {
				return 12 > a ? "??????????" : "??????????"
			},
			calendar : {
				sameDay : "[?????? ????] LT",
				nextDay : "[???????? ????] LT",
				nextWeek : "dddd[???? ????] LT",
				lastDay : "[??????????? ????] LT",
				lastWeek : "[???]dddd[??????? ????] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "??? %s",
				past : "%s???????",
				s : "????????????",
				m : "1 ????",
				mm : "%d ????",
				h : "1 ???????",
				hh : "%d ???????",
				d : "1 ???",
				dd : "%d ???",
				M : "1 ?????",
				MM : "%d ?????",
				y : "1 ??",
				yy : "%d ??"
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("tl-ph", {
			months : "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
			monthsShort : "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
			weekdays : "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
			weekdaysShort : "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
			weekdaysMin : "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "MM/D/YYYY",
				LL : "MMMM D, YYYY",
				LLL : "MMMM D, YYYY LT",
				LLLL : "dddd, MMMM DD, YYYY LT"
			},
			calendar : {
				sameDay : "[Ngayon sa] LT",
				nextDay : "[Bukas sa] LT",
				nextWeek : "dddd [sa] LT",
				lastDay : "[Kahapon sa] LT",
				lastWeek : "dddd [huling linggo] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "sa loob ng %s",
				past : "%s ang nakalipas",
				s : "ilang segundo",
				m : "isang minuto",
				mm : "%d minuto",
				h : "isang oras",
				hh : "%d oras",
				d : "isang araw",
				dd : "%d araw",
				M : "isang buwan",
				MM : "%d buwan",
				y : "isang taon",
				yy : "%d taon"
			},
			ordinal : function (a) {
				return a
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		var b = {
			1 : "'inci",
			5 : "'inci",
			8 : "'inci",
			70 : "'inci",
			80 : "'inci",
			2 : "'nci",
			7 : "'nci",
			20 : "'nci",
			50 : "'nci",
			3 : "'üncü",
			4 : "'üncü",
			100 : "'üncü",
			6 : "'nc?",
			9 : "'uncu",
			10 : "'uncu",
			30 : "'uncu",
			60 : "'?nc?",
			90 : "'?nc?"
		};
		return a.lang("tr", {
			months : "Ocak_?ubat_Mart_Nisan_May?s_Haziran_Temmuz_A?ustos_Eylül_Ekim_Kas?m_Aral?k".split("_"),
			monthsShort : "Oca_?ub_Mar_Nis_May_Haz_Tem_A?u_Eyl_Eki_Kas_Ara".split("_"),
			weekdays : "Pazar_Pazartesi_Sal?_?ar?amba_Per?embe_Cuma_Cumartesi".split("_"),
			weekdaysShort : "Paz_Pts_Sal_?ar_Per_Cum_Cts".split("_"),
			weekdaysMin : "Pz_Pt_Sa_?a_Pe_Cu_Ct".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd, D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[bugün saat] LT",
				nextDay : "[yar?n saat] LT",
				nextWeek : "[haftaya] dddd [saat] LT",
				lastDay : "[dün] LT",
				lastWeek : "[ge?en hafta] dddd [saat] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s sonra",
				past : "%s ?nce",
				s : "birka? saniye",
				m : "bir dakika",
				mm : "%d dakika",
				h : "bir saat",
				hh : "%d saat",
				d : "bir gün",
				dd : "%d gün",
				M : "bir ay",
				MM : "%d ay",
				y : "bir y?l",
				yy : "%d y?l"
			},
			ordinal : function (a) {
				if (0 === a)
					return a + "'?nc?";
				var c = a % 10,
				d = a % 100 - c,
				e = a >= 100 ? 100 : null;
				return a + (b[c] || b[d] || b[e])
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("tzm-latn", {
			months : "innayr_br?ayr?_mar?s?_ibrir_mayyw_ywnyw_ywlywz_?w?t_?wtanbir_kt?wbr?_nwwanbir_dwjnbir".split("_"),
			monthsShort : "innayr_br?ayr?_mar?s?_ibrir_mayyw_ywnyw_ywlywz_?w?t_?wtanbir_kt?wbr?_nwwanbir_dwjnbir".split("_"),
			weekdays : "asamas_aynas_asinas_akras_akwas_asimwas_asi?yas".split("_"),
			weekdaysShort : "asamas_aynas_asinas_akras_akwas_asimwas_asi?yas".split("_"),
			weekdaysMin : "asamas_aynas_asinas_akras_akwas_asimwas_asi?yas".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[asdkh g] LT",
				nextDay : "[aska g] LT",
				nextWeek : "dddd [g] LT",
				lastDay : "[assant g] LT",
				lastWeek : "dddd [g] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "dadkh s yan %s",
				past : "yan %s",
				s : "imik",
				m : "minu?",
				mm : "%d minu?",
				h : "sa?a",
				hh : "%d tassa?in",
				d : "ass",
				dd : "%d ossan",
				M : "ayowr",
				MM : "%d iyyirn",
				y : "asgas",
				yy : "%d isgasn"
			},
			week : {
				dow : 6,
				doy : 12
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("tzm", {
			months : "??????_?????_????_?????_?????_?????_??????_????_????????_?????_????????_???????".split("_"),
			monthsShort : "??????_?????_????_?????_?????_?????_??????_????_????????_?????_????????_???????".split("_"),
			weekdays : "??????_?????_??????_?????_?????_???????_???????".split("_"),
			weekdaysShort : "??????_?????_??????_?????_?????_???????_???????".split("_"),
			weekdaysMin : "??????_?????_??????_?????_?????_???????_???????".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "dddd D MMMM YYYY LT"
			},
			calendar : {
				sameDay : "[???? ?] LT",
				nextDay : "[???? ?] LT",
				nextWeek : "dddd [?] LT",
				lastDay : "[????? ?] LT",
				lastWeek : "dddd [?] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "???? ? ??? %s",
				past : "??? %s",
				s : "????",
				m : "?????",
				mm : "%d ?????",
				h : "????",
				hh : "%d ????????",
				d : "???",
				dd : "%d o????",
				M : "??o??",
				MM : "%d ??????",
				y : "?????",
				yy : "%d ??????"
			},
			week : {
				dow : 6,
				doy : 12
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		function b(a, b) {
			var c = a.split("_");
			return b % 10 === 1 && b % 100 !== 11 ? c[0] : b % 10 >= 2 && 4 >= b % 10 && (10 > b % 100 || b % 100 >= 20) ? c[1] : c[2]
		}
		function c(a, c, d) {
			var e = {
				mm : "хвилина_хвилини_хвилин",
				hh : "година_години_годин",
				dd : "день_дн?_дн?в",
				MM : "м?сяць_м?сяц?_м?сяц?в",
				yy : "р?к_роки_рок?в"
			};
			return "m" === d ? c ? "хвилина" : "хвилину" : "h" === d ? c ? "година" : "годину" : a + " " + b(e[d], +a)
		}
		function d(a, b) {
			var c = {
				nominative : "с?чень_лютий_березень_кв?тень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_"),
				accusative : "с?чня_лютого_березня_кв?тня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_")
			},
			d = /D[oD]? *MMMM?/.test(b) ? "accusative" : "nominative";
			return c[d][a.month()]
		}
		function e(a, b) {
			var c = {
				nominative : "нед?ля_понед?лок_в?второк_середа_четвер_п’ятниця_субота".split("_"),
				accusative : "нед?лю_понед?лок_в?второк_середу_четвер_п’ятницю_суботу".split("_"),
				genitive : "нед?л?_понед?лка_в?вторка_середи_четверга_п’ятниц?_суботи".split("_")
			},
			d = /(\[[ВвУу]\]) ?dddd/.test(b) ? "accusative" : /\[?(?:минуло?|наступно?)? ?\] ?dddd/.test(b) ? "genitive" : "nominative";
			return c[d][a.day()]
		}
		function f(a) {
			return function () {
				return a + "о" + (11 === this.hours() ? "б" : "") + "] LT"
			}
		}
		return a.lang("uk", {
			months : d,
			monthsShort : "с?ч_лют_бер_кв?т_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
			weekdays : e,
			weekdaysShort : "нд_пн_вт_ср_чт_пт_сб".split("_"),
			weekdaysMin : "нд_пн_вт_ср_чт_пт_сб".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD.MM.YYYY",
				LL : "D MMMM YYYY р.",
				LLL : "D MMMM YYYY р., LT",
				LLLL : "dddd, D MMMM YYYY р., LT"
			},
			calendar : {
				sameDay : f("[Сьогодн? "),
				nextDay : f("[Завтра "),
				lastDay : f("[Вчора "),
				nextWeek : f("[У] dddd ["),
				lastWeek : function () {
					switch (this.day()) {
					case 0:
					case 3:
					case 5:
					case 6:
						return f("[Минуло?] dddd [").call(this);
					case 1:
					case 2:
					case 4:
						return f("[Минулого] dddd [").call(this)
					}
				},
				sameElse : "L"
			},
			relativeTime : {
				future : "за %s",
				past : "%s тому",
				s : "дек?лька секунд",
				m : c,
				mm : c,
				h : "годину",
				hh : c,
				d : "день",
				dd : c,
				M : "м?сяць",
				MM : c,
				y : "р?к",
				yy : c
			},
			meridiem : function (a) {
				return 4 > a ? "ноч?" : 12 > a ? "ранку" : 17 > a ? "дня" : "вечора"
			},
			ordinal : function (a, b) {
				switch (b) {
				case "M":
				case "d":
				case "DDD":
				case "w":
				case "W":
					return a + "-й";
				case "D":
					return a + "-го";
				default:
					return a
				}
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("uz", {
			months : "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
			monthsShort : "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
			weekdays : "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
			weekdaysShort : "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
			weekdaysMin : "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM YYYY",
				LLL : "D MMMM YYYY LT",
				LLLL : "D MMMM YYYY, dddd LT"
			},
			calendar : {
				sameDay : "[Бугун соат] LT [да]",
				nextDay : "[Эртага] LT [да]",
				nextWeek : "dddd [куни соат] LT [да]",
				lastDay : "[Кеча соат] LT [да]",
				lastWeek : "[Утган] dddd [куни соат] LT [да]",
				sameElse : "L"
			},
			relativeTime : {
				future : "Якин %s ичида",
				past : "Бир неча %s олдин",
				s : "фурсат",
				m : "бир дакика",
				mm : "%d дакика",
				h : "бир соат",
				hh : "%d соат",
				d : "бир кун",
				dd : "%d кун",
				M : "бир ой",
				MM : "%d ой",
				y : "бир йил",
				yy : "%d йил"
			},
			week : {
				dow : 1,
				doy : 7
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("vi", {
			months : "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
			monthsShort : "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
			weekdays : "ch? nh?t_th? hai_th? ba_th? t?_th? n?m_th? sáu_th? b?y".split("_"),
			weekdaysShort : "CN_T2_T3_T4_T5_T6_T7".split("_"),
			weekdaysMin : "CN_T2_T3_T4_T5_T6_T7".split("_"),
			longDateFormat : {
				LT : "HH:mm",
				L : "DD/MM/YYYY",
				LL : "D MMMM [n?m] YYYY",
				LLL : "D MMMM [n?m] YYYY LT",
				LLLL : "dddd, D MMMM [n?m] YYYY LT",
				l : "DD/M/YYYY",
				ll : "D MMM YYYY",
				lll : "D MMM YYYY LT",
				llll : "ddd, D MMM YYYY LT"
			},
			calendar : {
				sameDay : "[H?m nay lúc] LT",
				nextDay : "[Ngày mai lúc] LT",
				nextWeek : "dddd [tu?n t?i lúc] LT",
				lastDay : "[H?m qua lúc] LT",
				lastWeek : "dddd [tu?n r?i lúc] LT",
				sameElse : "L"
			},
			relativeTime : {
				future : "%s t?i",
				past : "%s tr??c",
				s : "vài giay",
				m : "m?t phút",
				mm : "%d phút",
				h : "m?t gi?",
				hh : "%d gi?",
				d : "m?t ngày",
				dd : "%d ngày",
				M : "m?t tháng",
				MM : "%d tháng",
				y : "m?t n?m",
				yy : "%d n?m"
			},
			ordinal : function (a) {
				return a
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("zh-cn", {
			months : "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
			monthsShort : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
			weekdays : "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
			weekdaysShort : "周日_周一_周二_周三_周四_周五_周六".split("_"),
			weekdaysMin : "日_一_二_三_四_五_六".split("_"),
			longDateFormat : {
				LT : "Ah点mm",
				L : "YYYY-MM-DD",
				LL : "YYYY年MMMD日",
				LLL : "YYYY年MMMD日LT",
				LLLL : "YYYY年MMMD日ddddLT",
				l : "YYYY-MM-DD",
				ll : "YYYY年MMMD日",
				lll : "YYYY年MMMD日LT",
				llll : "YYYY年MMMD日ddddLT"
			},
			meridiem : function (a, b) {
				var c = 100 * a + b;
				return 600 > c ? "凌晨" : 900 > c ? "早上" : 1130 > c ? "上午" : 1230 > c ? "中午" : 1800 > c ? "下午" : "晚上"
			},
			calendar : {
				sameDay : function () {
					return 0 === this.minutes() ? "[今天]Ah[点整]" : "[今天]LT"
				},
				nextDay : function () {
					return 0 === this.minutes() ? "[明天]Ah[点整]" : "[明天]LT"
				},
				lastDay : function () {
					return 0 === this.minutes() ? "[昨天]Ah[点整]" : "[昨天]LT"
				},
				nextWeek : function () {
					var b,
					c;
					return b = a().startOf("week"),
					c = this.unix() - b.unix() >= 604800 ? "[下]" : "[本]",
					0 === this.minutes() ? c + "dddAh点整" : c + "dddAh点mm"
				},
				lastWeek : function () {
					var b,
					c;
					return b = a().startOf("week"),
					c = this.unix() < b.unix() ? "[上]" : "[本]",
					0 === this.minutes() ? c + "dddAh点整" : c + "dddAh点mm"
				},
				sameElse : "LL"
			},
			ordinal : function (a, b) {
				switch (b) {
				case "d":
				case "D":
				case "DDD":
					return a + "日";
				case "M":
					return a + "月";
				case "w":
				case "W":
					return a + "周";
				default:
					return a
				}
			},
			relativeTime : {
				future : "%s内",
				past : "%s前",
				s : "几秒",
				m : "1分钟",
				mm : "%d分钟",
				h : "1小时",
				hh : "%d小时",
				d : "1天",
				dd : "%d天",
				M : "1个月",
				MM : "%d个月",
				y : "1年",
				yy : "%d年"
			},
			week : {
				dow : 1,
				doy : 4
			}
		})
	}),
	function (a) {
		a(mb)
	}
	(function (a) {
		return a.lang("zh-tw", {
			months : "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
			monthsShort : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
			weekdays : "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
			weekdaysShort : "週日_週一_週二_週三_週四_週五_週六".split("_"),
			weekdaysMin : "日_一_二_三_四_五_六".split("_"),
			longDateFormat : {
				LT : "Ah點mm",
				L : "YYYY年MMMD日",
				LL : "YYYY年MMMD日",
				LLL : "YYYY年MMMD日LT",
				LLLL : "YYYY年MMMD日ddddLT",
				l : "YYYY年MMMD日",
				ll : "YYYY年MMMD日",
				lll : "YYYY年MMMD日LT",
				llll : "YYYY年MMMD日ddddLT"
			},
			meridiem : function (a, b) {
				var c = 100 * a + b;
				return 900 > c ? "早上" : 1130 > c ? "上午" : 1230 > c ? "中午" : 1800 > c ? "下午" : "晚上"
			},
			calendar : {
				sameDay : "[今天]LT",
				nextDay : "[明天]LT",
				nextWeek : "[下]ddddLT",
				lastDay : "[昨天]LT",
				lastWeek : "[上]ddddLT",
				sameElse : "L"
			},
			ordinal : function (a, b) {
				switch (b) {
				case "d":
				case "D":
				case "DDD":
					return a + "日";
				case "M":
					return a + "月";
				case "w":
				case "W":
					return a + "週";
				default:
					return a
				}
			},
			relativeTime : {
				future : "%s內",
				past : "%s前",
				s : "幾秒",
				m : "一分鐘",
				mm : "%d分鐘",
				h : "一小時",
				hh : "%d小時",
				d : "一天",
				dd : "%d天",
				M : "一個月",
				MM : "%d個月",
				y : "一年",
				yy : "%d年"
			}
		})
	}),
	mb.lang("en"),
	Bb ? module.exports = mb : "function" == typeof define && define.amd ? (define("moment", function (a, b, c) {
				return c.config && c.config() && c.config().noGlobal === !0 && (qb.moment = nb),
				mb
			}), lb(!0)) : lb()
}).call(this);
